{"ast":null,"code":"import _defineProperty from\"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";var _handleActions;import{createAction,handleActions}from\"redux-actions\";import produce from\"immer\";import{storage}from\"../../shared/firebase\";// actions\nvar UPLOADING=\"UPLOADING\";var UPLOAD_IMAGE=\"UPLOAD_IMAGE\";var SET_PREVIEW=\"SET_PREVIEW\";// action creators\nvar uploading=createAction(UPLOADING,function(uploading){return{uploading:uploading};});var uploadImage=createAction(UPLOAD_IMAGE,function(image_url){return{image_url:image_url};});var setPreview=createAction(SET_PREVIEW,function(preview){return{preview:preview};});function uploadImageFB(image){return function(dispatch,getState,_ref){var history=_ref.history;dispatch(uploading(true));console.log(\"images/\".concat(new Date().getTime(),\"_\").concat(image.name));var _upload=storage.ref(\"images/\".concat(image.name)).put(image);//   업로드!\n_upload.then(function(snapshot){console.log(snapshot);// 업로드한 파일의 다운로드 경로를 가져오자!\nsnapshot.ref.getDownloadURL().then(function(url){console.log(url);dispatch(uploadImage(url));});}).catch(function(err){dispatch(uploading(false));});};}// initial state\nvar initialState={image_url:'',uploading:false,preview:null};// reducer\nexport default handleActions((_handleActions={},_defineProperty(_handleActions,UPLOAD_IMAGE,function(state,action){return produce(state,function(draft){draft.image_url=action.payload.image_url;draft.uploading=false;});}),_defineProperty(_handleActions,UPLOADING,function(state,action){return produce(state,function(draft){draft.uploading=action.payload.uploading;});}),_defineProperty(_handleActions,SET_PREVIEW,function(state,action){return produce(state,function(draft){draft.preview=action.payload.preview;});}),_handleActions),initialState);var actionCreators={uploadImage:uploadImage,uploadImageFB:uploadImageFB,setPreview:setPreview};export{actionCreators};","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/image.js"],"names":["createAction","handleActions","produce","storage","UPLOADING","UPLOAD_IMAGE","SET_PREVIEW","uploading","uploadImage","image_url","setPreview","preview","uploadImageFB","image","dispatch","getState","history","console","log","Date","getTime","name","_upload","ref","put","then","snapshot","getDownloadURL","url","catch","err","initialState","state","action","draft","payload","actionCreators"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport produce from \"immer\";\n\nimport { storage } from \"../../shared/firebase\";\n\n// actions\nconst UPLOADING = \"UPLOADING\";\nconst UPLOAD_IMAGE = \"UPLOAD_IMAGE\";\nconst SET_PREVIEW = \"SET_PREVIEW\";\n\n\n// action creators\nconst uploading = createAction(UPLOADING, (uploading) => ({ uploading }));\nconst uploadImage = createAction(UPLOAD_IMAGE, (image_url) => ({ image_url }));\nconst setPreview = createAction(SET_PREVIEW, (preview) =>({preview}));\n\n\nfunction uploadImageFB(image) {\n  return function (dispatch, getState, {history}) {\n    \n    dispatch(uploading(true));\n    \n    console.log(`images/${new Date().getTime()}_${image.name}`);\n    const _upload = storage.ref(`images/${image.name}`).put(image);\n\n    //   업로드!\n    _upload.then((snapshot) => {\n      console.log(snapshot);\n\n      // 업로드한 파일의 다운로드 경로를 가져오자!\n      snapshot.ref.getDownloadURL().then((url) => {\n        console.log(url);\n        dispatch(uploadImage(url));\n      });\n    }).catch(err => {\n        dispatch(uploading(false));\n    });\n  };\n}\n\n// initial state\nconst initialState = {\n  image_url: '',\n  uploading: false,\n  preview: null,\n};\n\n// reducer\nexport default handleActions(\n  {\n    [UPLOAD_IMAGE]: (state, action) =>\n      produce(state, (draft) => {\n        draft.image_url = action.payload.image_url;\n        draft.uploading = false;\n      }),\n\n    [UPLOADING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.uploading = action.payload.uploading;\n      }),\n      [SET_PREVIEW]: (state, action) => \n      produce(state,(draft) => {\n          draft.preview = action.payload.preview;\n      })\n  },\n  initialState\n);\n\nconst actionCreators = {\n  uploadImage,\n  uploadImageFB,\n  setPreview,\n};\n\nexport { actionCreators };"]},"metadata":{},"sourceType":"module"}