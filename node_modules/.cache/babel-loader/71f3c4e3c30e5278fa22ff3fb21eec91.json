{"ast":null,"code":"var _jsxFileName = \"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/Upload.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { storage } from \"./firebase\";\nimport { Button } from \"../elements\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const is_uploading = useSelector(state => state.image.uploading);\n  const fileInput = React.useRef();\n\n  const selectFile = e => {\n    console.log(e);\n    console.log(e.target);\n    console.log(e.target.files[0]);\n    console.log(fileInput.current.files[0]);\n  };\n\n  const uploadFB = () => {\n    let image = fileInput.current.files[0];\n\n    const _upload = storage.ref(`images/${image.name}`).put(image);\n\n    _upload.then(snapshot => {\n      console.log(snapshot);\n      snapshot.ref.getDownloadURL().then(url => {\n        console.log(url);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: selectFile,\n      ref: fileInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      _onClick: uploadFB,\n      children: \"\\uC5C5\\uB85C\\uB4DC\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Upload, \"fqShzcroMxqgZOYDQq0wvmqh0V8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/Upload.js"],"names":["React","storage","Button","useDispatch","useSelector","Upload","props","dispatch","is_uploading","state","image","uploading","fileInput","useRef","selectFile","e","console","log","target","files","current","uploadFB","_upload","ref","name","put","then","snapshot","getDownloadURL","url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAAQC,MAAR,QAAqB,aAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;;;AAIA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,QAAQ,GAAGJ,WAAW,EAA5B;AACA,QAAMK,YAAY,GAAGJ,WAAW,CAACK,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,SAAtB,CAAhC;AAEA,QAAMC,SAAS,GAAGZ,KAAK,CAACa,MAAN,EAAlB;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ;AAGAH,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACQ,OAAV,CAAkBD,KAAlB,CAAwB,CAAxB,CAAZ;AACH,GAPD;;AASA,QAAME,QAAQ,GAAE,MAAM;AAClB,QAAIX,KAAK,GAAGE,SAAS,CAACQ,OAAV,CAAkBD,KAAlB,CAAwB,CAAxB,CAAZ;;AACA,UAAMG,OAAO,GAAGrB,OAAO,CAACsB,GAAR,CAAa,UAASb,KAAK,CAACc,IAAK,EAAjC,EAAoCC,GAApC,CAAwCf,KAAxC,CAAhB;;AAEAY,IAAAA,OAAO,CAACI,IAAR,CAAcC,QAAD,IAAc;AACvBX,MAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AAGAA,MAAAA,QAAQ,CAACJ,GAAT,CAAaK,cAAb,GAA8BF,IAA9B,CAAoCG,GAAD,IAAO;AACtCb,QAAAA,OAAO,CAACC,GAAR,CAAYY,GAAZ;AACH,OAFD;AAGH,KAPD;AAQH,GAZD;;AAeA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAO,MAAA,IAAI,EAAE,MAAb;AAAoB,MAAA,QAAQ,EAAIf,UAAhC;AAA4C,MAAA,GAAG,EAAEF;AAAjD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAES,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CArCD;;GAAMhB,M;UACeF,W,EACIC,W;;;KAFnBC,M;AAwCN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport {storage} from \"./firebase\";\nimport {Button} from \"../elements\"\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\n\nconst Upload = (props) => {\n    const dispatch = useDispatch();\n    const is_uploading = useSelector(state => state.image.uploading);\n\n    const fileInput = React.useRef();\n\n    const selectFile = (e) => {\n        console.log(e);\n        console.log(e.target);\n        console.log(e.target.files[0]);\n\n\n        console.log(fileInput.current.files[0])\n    }\n\n    const uploadFB =() => {\n        let image = fileInput.current.files[0];\n        const _upload = storage.ref(`images/${image.name}`).put(image);\n\n        _upload.then((snapshot) => {\n            console.log(snapshot);\n\n\n            snapshot.ref.getDownloadURL().then((url)=>{\n                console.log(url);\n            })\n        })\n    }\n\n    \n    return (\n        <React.Fragment>\n            <input type =\"file\" onChange = {selectFile} ref={fileInput}/>\n            <Button _onClick={uploadFB}>업로드하기</Button>\n\n        </React.Fragment>\n    )\n}\n\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}