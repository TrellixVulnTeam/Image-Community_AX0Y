{"ast":null,"code":"import { createAction, handleAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\nimport { auth } from \"../shared/firebase\"; //액션타입 3가지\n\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\"; // action creators\n\nconst logIn = createAction(LOG_IN, user => ({\n  user\n}));\nconst logOut = createAction(LOG_OUT, user => ({\n  user\n}));\nconst getUser = createAction(GET_USER, user => ({\n  user\n})); //initialState\n\nconst initialState = {\n  user: null,\n  is_login: false\n}; //middleware actions\n\nconst loginAction = user => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    console.log(history);\n    dispatch(logIn(user));\n    history.push('/');\n  };\n}; //reducer\n\n\nexport default handleActions({\n  [SET_USER]: (state, action) => produce(state, draft => {\n    setCookie(\"is_login\", \"success\");\n    draft.user = action.payload.user; //payload를 중간에 거쳐야 한다.\n\n    draft.is_login = true;\n  }),\n  [LOG_OUT]: (state, action) => produce(state, draft => {\n    deleteCookie(\"is_login\");\n    draft.user = null;\n    draft.is_login = false;\n  }),\n  [GET_USER]: (state, action) => produce(state, draft => {})\n}, initialState); // action creator export\n\nconst actionCreators = {\n  logOut,\n  getUser,\n  loginAction\n};\nexport { actionCreators };","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/user.js"],"names":["createAction","handleAction","handleActions","produce","setCookie","getCookie","deleteCookie","auth","LOG_OUT","GET_USER","SET_USER","logIn","LOG_IN","user","logOut","getUser","initialState","is_login","loginAction","dispatch","getState","history","console","log","push","state","action","draft","payload","actionCreators"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,YAAvB,EAAqCC,aAArC,QAA0D,eAA1D;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,YAA/B,QAAmD,qBAAnD;AACA,SAAQC,IAAR,QAAmB,oBAAnB,C,CAGA;;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB,C,CAEA;;AACA,MAAMC,KAAK,GAAGX,YAAY,CAACY,MAAD,EAAUC,IAAD,KAAW;AAAEA,EAAAA;AAAF,CAAX,CAAT,CAA1B;AACA,MAAMC,MAAM,GAAGd,YAAY,CAACQ,OAAD,EAAWK,IAAD,KAAW;AAAEA,EAAAA;AAAF,CAAX,CAAV,CAA3B;AACA,MAAME,OAAO,GAAGf,YAAY,CAACS,QAAD,EAAYI,IAAD,KAAW;AAAEA,EAAAA;AAAF,CAAX,CAAX,CAA5B,C,CAEA;;AACA,MAAMG,YAAY,GAAG;AACnBH,EAAAA,IAAI,EAAE,IADa;AAEnBI,EAAAA,QAAQ,EAAE;AAFS,CAArB,C,CAKA;;AACA,MAAMC,WAAW,GAAGL,IAAD,IAAU;AAC3B,SAAO,UAAUM,QAAV,EAAoBC,QAApB,EAA8B;AAACC,IAAAA;AAAD,GAA9B,EAAwC;AAC7CC,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACAF,IAAAA,QAAQ,CAACR,KAAK,CAACE,IAAD,CAAN,CAAR;AACAQ,IAAAA,OAAO,CAACG,IAAR,CAAa,GAAb;AAED,GALD;AAOD,CARD,C,CAYA;;;AAEA,eAAetB,aAAa,CAC1B;AACE,GAACQ,QAAD,GAAY,CAACe,KAAD,EAAQC,MAAR,KACVvB,OAAO,CAACsB,KAAD,EAASE,KAAD,IAAW;AACxBvB,IAAAA,SAAS,CAAC,UAAD,EAAa,SAAb,CAAT;AACAuB,IAAAA,KAAK,CAACd,IAAN,GAAaa,MAAM,CAACE,OAAP,CAAef,IAA5B,CAFwB,CAEU;;AAClCc,IAAAA,KAAK,CAACV,QAAN,GAAiB,IAAjB;AACD,GAJM,CAFX;AAOE,GAACT,OAAD,GAAW,CAACiB,KAAD,EAAQC,MAAR,KAAmBvB,OAAO,CAACsB,KAAD,EAASE,KAAD,IAAW;AACtDrB,IAAAA,YAAY,CAAC,UAAD,CAAZ;AACAqB,IAAAA,KAAK,CAACd,IAAN,GAAY,IAAZ;AACAc,IAAAA,KAAK,CAACV,QAAN,GAAiB,KAAjB;AAGD,GANoC,CAPvC;AAeE,GAACR,QAAD,GAAY,CAACgB,KAAD,EAAQC,MAAR,KAAmBvB,OAAO,CAACsB,KAAD,EAASE,KAAD,IAAW,CAAE,CAArB;AAfxC,CAD0B,EAkB1BX,YAlB0B,CAA5B,C,CAqBA;;AACA,MAAMa,cAAc,GAAG;AACrBf,EAAAA,MADqB;AAErBC,EAAAA,OAFqB;AAGrBG,EAAAA;AAHqB,CAAvB;AAMA,SAASW,cAAT","sourcesContent":["import { createAction, handleAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\n\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\nimport {auth} from \"../shared/firebase\"\n\n\n//액션타입 3가지\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\";\n\n// action creators\nconst logIn = createAction(LOG_IN, (user) => ({ user }));\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\nconst getUser = createAction(GET_USER, (user) => ({ user }));\n\n//initialState\nconst initialState = {\n  user: null,\n  is_login: false,\n};\n\n//middleware actions\nconst loginAction =(user) => {\n  return function (dispatch, getState, {history}){\n    console.log(history);\n    dispatch(logIn(user));\n    history.push('/');\n\n  }\n\n}\n\n\n\n//reducer\n\nexport default handleActions(\n  {\n    [SET_USER]: (state, action) =>\n      produce(state, (draft) => {\n        setCookie(\"is_login\", \"success\");\n        draft.user = action.payload.user; //payload를 중간에 거쳐야 한다.\n        draft.is_login = true;\n      }),\n    [LOG_OUT]: (state, action) => produce(state, (draft) => {\n      deleteCookie(\"is_login\");\n      draft.user =null;\n      draft.is_login = false;\n\n\n    }),\n      \n    [GET_USER]: (state, action) => produce(state, (draft) => {}),\n  },\n  initialState\n);\n\n// action creator export\nconst actionCreators = {\n  logOut,\n  getUser,\n  loginAction,\n};\n\nexport { actionCreators };\n"]},"metadata":{},"sourceType":"module"}