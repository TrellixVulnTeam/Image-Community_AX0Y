{"ast":null,"code":"import _toConsumableArray from\"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _defineProperty from\"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var _handleActions;import{createAction,handleActions}from\"redux-actions\";import{produce}from\"immer\";import{firestore,storage}from\"../../shared/firebase\";import\"moment\";import moment from\"moment\";import{actionCreators as imageActions}from\"./image\";var SET_POST=\"SET_POST\";var ADD_POST=\"ADD_POST\";var EDIT_POST=\"EDIT_POST\";var LODING=\"LOADING\";var DELETE_POST=\"DELETE_POST\";var setPost=createAction(SET_POST,function(post_list,paging){return{post_list:post_list,paging:paging};});var addPost=createAction(ADD_POST,function(post){return{post:post};});var editPost=createAction(EDIT_POST,function(post_id,post){return{post_id:post_id,post:post};});var deletePost=createAction(DELETE_POST,function(post_id,post){return{post_id:post_id,post:post};});var loading=createAction(LODING,function(is_loading){return{is_loading:is_loading};});var initialState={list:[],paging:{start:null,next:null,size:3},is_loading:false};var initialPost={// id: 0,\n// user_info: {\n//   user_name: \"mean0\",\n//   user_profile: \"https://mean0images.s3.ap-northeast-2.amazonaws.com/4.jpeg\",\n// },\nimage_url:\"https://mean0images.s3.ap-northeast-2.amazonaws.com/4.jpeg\",contents:\"\",comment_cnt:0,insert_dt:moment().format(\"YYYY-MM-DD hh:mm:ss\")};var deletePostFB=function deletePostFB(){var post_id=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var post=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return function(dispatch,getState,_ref){var history=_ref.history;if(!post_id){console.log(\"게시물 정보가 없어요!\");return;}var _post_idx=getState().post.list.findIndex(function(p){return p.id===post_id;});var _post=getState().post.list[_post_idx];var postDB=firestore.collection(\"post\");postDB.doc(post_id).delete(post).then(function(){dispatch(deletePost(post_id));history.replace(\"/\");console.log(\"포스트가 성공적으로 삭제되었습니다.\");}).catch(function(err){console.error(\"포스트를 삭제하지 못했습니다.\",err);});console.log(_post);};};var editPostFB=function editPostFB(){var post_id=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var post=arguments.length>1&&arguments[1]!==undefined?arguments[1]:{};return function(dispatch,getState,_ref2){var history=_ref2.history;if(!post_id){console.log(\"게시물 정보가 없어요!\");return;}var _image=getState().image.preview;var _post_idx=getState().post.list.findIndex(function(p){return p.id===post_id;});var _post=getState().post.list[_post_idx];console.log(_post);var postDB=firestore.collection(\"post\");if(_image===_post.image_url){postDB.doc(post_id).update(post).then(function(doc){dispatch(editPost(post_id,_objectSpread({},post)));history.replace(\"/\");});return;}else{var user_id=getState().user.user.uid;var _upload=storage.ref(\"images/\".concat(user_id,\"_\").concat(new Date().getTime())).putString(_image,\"data_url\");_upload.then(function(snapshot){snapshot.ref.getDownloadURL().then(function(url){console.log(url);return url;}).then(function(url){postDB.doc(post_id).update(_objectSpread(_objectSpread({},post),{},{image_url:url})).then(function(doc){dispatch(editPost(post_id,_objectSpread(_objectSpread({},post),{},{image_url:url})));history.replace(\"/\");});}).catch(function(err){window.alert(\"앗! 이미지 업로드에 문제가 있어요!\");console.log(\"앗! 이미지 업로드에 문제가 있어요!\",err);});});}};};var addPostFB=function addPostFB(){var contents=arguments.length>0&&arguments[0]!==undefined?arguments[0]:\"\";return function(dispatch,getState,_ref3){var history=_ref3.history;var postDB=firestore.collection(\"post\");var _user=getState().user.user;var user_info={user_name:_user.user_name,user_id:_user.uid,user_profile:_user.user_profile};var _post=_objectSpread(_objectSpread({},initialPost),{},{contents:contents,insert_dt:moment().format(\"YYYY-MM-DD hh:mm:ss\")});var _image=getState().image.preview;console.log(_image);console.log(typeof _image);var _upload=storage.ref(\"images/\".concat(user_info.user_id,\"_\").concat(new Date().getTime())).putString(_image,\"data_url\");_upload.then(function(snapshot){snapshot.ref.getDownloadURL().then(function(url){console.log(url);return url;}).then(function(url){postDB.add(_objectSpread(_objectSpread(_objectSpread({},user_info),_post),{},{image_url:url})).then(function(doc){var post=_objectSpread(_objectSpread({user_info:user_info},_post),{},{id:doc.id,image_url:url});dispatch(addPost(post));history.replace(\"/\");dispatch(imageActions.setPreview(null));}).catch(function(err){window.alert(\"앗! 포스트 작성에 문제가 있어요!\");console.log(\"post 작성에 실패했어요!\",err);});}).catch(function(err){window.alert(\"앗! 이미지 업로드에 문제가 있어요!\");console.log(\"앗! 이미지 업로드에 문제가 있어요!\",err);});});};};var getPostFB=function getPostFB(){var start=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;var size=arguments.length>1&&arguments[1]!==undefined?arguments[1]:3;return function(dispatch,getState,_ref4){var history=_ref4.history;// state에서 페이징 정보 가져오기\nvar _paging=getState().post.paging;// 시작정보가 기록되었는데 다음 가져올 데이터가 없다면? 앗, 리스트가 끝났겠네요!\n// 그럼 아무것도 하지말고 return을 해야죠!\nif(_paging.start&&!_paging.next){return;}// 가져오기 시작~!\ndispatch(loading(true));var postDB=firestore.collection(\"post\");var query=postDB.orderBy(\"insert_dt\",\"desc\");// 시작점 정보가 있으면? 시작점부터 가져오도록 쿼리 수정!\nif(start){query=query.startAt(start);}// 사이즈보다 1개 더 크게 가져옵시다.\n// 3개씩 끊어서 보여준다고 할 때, 4개를 가져올 수 있으면? 앗 다음 페이지가 있겠네하고 알 수 있으니까요.\n// 만약 4개 미만이라면? 다음 페이지는 없겠죠! :)\nquery.limit(size+1).get().then(function(docs){var post_list=[];// 새롭게 페이징 정보를 만들어줘요.\n// 시작점에는 새로 가져온 정보의 시작점을 넣고,\n// next에는 마지막 항목을 넣습니다.\n// (이 next가 다음번 리스트 호출 때 start 파라미터로 넘어올거예요.)\nvar paging={start:docs.docs[0],next:docs.docs.length===size+1?docs.docs[docs.docs.length-1]:null,size:size};docs.forEach(function(doc){var _post=doc.data();var post=Object.keys(_post).reduce(function(acc,cur){if(cur.indexOf(\"user_\")!==-1){return _objectSpread(_objectSpread({},acc),{},{user_info:_objectSpread(_objectSpread({},acc.user_info),{},_defineProperty({},cur,_post[cur]))});}return _objectSpread(_objectSpread({},acc),{},_defineProperty({},cur,_post[cur]));},{id:doc.id,user_info:{}});post_list.push(post);});// 마지막 하나는 빼줍니다.\n// 그래야 size대로 리스트가 추가되니까요!\n// 마지막 데이터는 다음 페이지의 유무를 알려주기 위한 친구일 뿐! 리스트에 들어가지 않아요!\npost_list.pop();dispatch(setPost(post_list,paging));});};};var getOnePostFB=function getOnePostFB(id){return function(dispatch,getState,_ref5){var history=_ref5.history;var postDB=firestore.collection(\"post\");postDB.doc(id).get().then(function(doc){var _post=doc.data();if(!_post){return;}var post=Object.keys(_post).reduce(function(acc,cur){if(cur.indexOf(\"user_\")!==-1){return _objectSpread(_objectSpread({},acc),{},{user_info:_objectSpread(_objectSpread({},acc.user_info),{},_defineProperty({},cur,_post[cur]))});}return _objectSpread(_objectSpread({},acc),{},_defineProperty({},cur,_post[cur]));},{id:doc.id,user_info:{}});dispatch(setPost([post]));});};};export default handleActions((_handleActions={},_defineProperty(_handleActions,SET_POST,function(state,action){return produce(state,function(draft){var _draft$list;(_draft$list=draft.list).push.apply(_draft$list,_toConsumableArray(action.payload.post_list));draft.list=draft.list.reduce(function(acc,cur){if(acc.findIndex(function(a){return a.id===cur.id;})===-1){return[].concat(_toConsumableArray(acc),[cur]);}else{acc[acc.findIndex(function(a){return a.id===cur.id;})]=cur;return acc;}},[]);if(action.payload.paging){draft.paging=action.payload.paging;}draft.is_loading=false;});}),_defineProperty(_handleActions,ADD_POST,function(state,action){return produce(state,function(draft){draft.list.unshift(action.payload.post);});}),_defineProperty(_handleActions,EDIT_POST,function(state,action){return produce(state,function(draft){var idx=draft.list.findIndex(function(p){return p.id===action.payload.post_id;});draft.list[idx]=_objectSpread(_objectSpread({},draft.list[idx]),action.payload.post);});}),_defineProperty(_handleActions,DELETE_POST,function(state,action){return produce(state,function(draft){var idx=draft.list.findIndex(function(p){return p.id===action.payload.post_id;});draft.list.splice(idx);});}),_defineProperty(_handleActions,LODING,function(state,action){return produce(state,function(draft){draft.is_loading=action.payload.is_loading;});}),_handleActions),initialState);var actionCreators={setPost:setPost,addPost:addPost,editPost:editPost,deletePost:deletePost,getPostFB:getPostFB,addPostFB:addPostFB,editPostFB:editPostFB,getOnePostFB:getOnePostFB,deletePostFB:deletePostFB};export{actionCreators};","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/post.js"],"names":["createAction","handleActions","produce","firestore","storage","moment","actionCreators","imageActions","SET_POST","ADD_POST","EDIT_POST","LODING","DELETE_POST","setPost","post_list","paging","addPost","post","editPost","post_id","deletePost","loading","is_loading","initialState","list","start","next","size","initialPost","image_url","contents","comment_cnt","insert_dt","format","deletePostFB","dispatch","getState","history","console","log","_post_idx","findIndex","p","id","_post","postDB","collection","doc","delete","then","replace","catch","err","error","editPostFB","_image","image","preview","update","user_id","user","uid","_upload","ref","Date","getTime","putString","snapshot","getDownloadURL","url","window","alert","addPostFB","_user","user_info","user_name","user_profile","add","setPreview","getPostFB","_paging","query","orderBy","startAt","limit","get","docs","length","forEach","data","Object","keys","reduce","acc","cur","indexOf","push","pop","getOnePostFB","state","action","draft","payload","a","unshift","idx","splice"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { firestore, storage } from \"../../shared/firebase\";\nimport \"moment\";\nimport moment from \"moment\";\n\nimport { actionCreators as imageActions } from \"./image\";\n\nconst SET_POST = \"SET_POST\";\nconst ADD_POST = \"ADD_POST\";\nconst EDIT_POST = \"EDIT_POST\";\nconst LODING = \"LOADING\";\nconst DELETE_POST = \"DELETE_POST\"\n\nconst setPost = createAction(SET_POST, (post_list, paging) => ({\n  post_list,\n  paging,\n}));\nconst addPost = createAction(ADD_POST, (post) => ({ post }));\nconst editPost = createAction(EDIT_POST, (post_id, post) => ({\n  post_id,\n  post,\n}));\nconst deletePost = createAction(DELETE_POST, (post_id, post) => ({\n  post_id,\n  post,\n}));\nconst loading = createAction(LODING, (is_loading) => ({ is_loading }));\n\nconst initialState = {\n  list: [],\n  paging: { start: null, next: null, size: 3 },\n  is_loading: false,\n};\n\nconst initialPost = {\n  // id: 0,\n  // user_info: {\n  //   user_name: \"mean0\",\n  //   user_profile: \"https://mean0images.s3.ap-northeast-2.amazonaws.com/4.jpeg\",\n  // },\n  image_url: \"https://mean0images.s3.ap-northeast-2.amazonaws.com/4.jpeg\",\n  contents: \"\",\n  comment_cnt: 0,\n  insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\n};\n\n\n\nconst deletePostFB =(post_id =null, post = {}) => {\n  return function(dispatch, getState, {history}){\n\n    if(!post_id){\n      console.log(\"게시물 정보가 없어요!\")\n      return;\n    }\n    const _post_idx = getState().post.list.findIndex((p) => p.id === post_id);\n    const _post = getState().post.list[_post_idx];\n\n    const postDB = firestore.collection(\"post\");\n\n    postDB.doc(post_id).delete(post).then(() =>{\n      dispatch(deletePost(post_id));\n      history.replace(\"/\");\n      console.log(\"포스트가 성공적으로 삭제되었습니다.\")\n    }).catch((err)=>{\n      console.error(\"포스트를 삭제하지 못했습니다.\", err)\n    })\n\n    console.log(_post);\n  }\n\n}\n\nconst editPostFB = (post_id = null, post = {}) => {\n  return function (dispatch, getState, { history }) {\n    if (!post_id) {\n      console.log(\"게시물 정보가 없어요!\");\n      return;\n    }\n\n    const _image = getState().image.preview;\n\n    const _post_idx = getState().post.list.findIndex((p) => p.id === post_id);\n    const _post = getState().post.list[_post_idx];\n\n    console.log(_post);\n\n    const postDB = firestore.collection(\"post\");\n\n    if (_image === _post.image_url) {\n      postDB\n        .doc(post_id)\n        .update(post)\n        .then((doc) => {\n          dispatch(editPost(post_id, { ...post }));\n          history.replace(\"/\");\n        });\n\n      return;\n    } else {\n      const user_id = getState().user.user.uid;\n      const _upload = storage\n        .ref(`images/${user_id}_${new Date().getTime()}`)\n        .putString(_image, \"data_url\");\n\n      _upload.then((snapshot) => {\n        snapshot.ref\n          .getDownloadURL()\n          .then((url) => {\n            console.log(url);\n\n            return url;\n          })\n          .then((url) => {\n            postDB\n              .doc(post_id)\n              .update({ ...post, image_url: url })\n              .then((doc) => {\n                dispatch(editPost(post_id, { ...post, image_url: url }));\n                history.replace(\"/\");\n              });\n          })\n          .catch((err) => {\n            window.alert(\"앗! 이미지 업로드에 문제가 있어요!\");\n            console.log(\"앗! 이미지 업로드에 문제가 있어요!\", err);\n          });\n      });\n    }\n  };\n};\n\nconst addPostFB = (contents = \"\") => {\n  return function (dispatch, getState, { history }) {\n    const postDB = firestore.collection(\"post\");\n\n    const _user = getState().user.user;\n\n    const user_info = {\n      user_name: _user.user_name,\n      user_id: _user.uid,\n      user_profile: _user.user_profile,\n    };\n\n    const _post = {\n      ...initialPost,\n      contents: contents,\n      insert_dt: moment().format(\"YYYY-MM-DD hh:mm:ss\"),\n    };\n\n    const _image = getState().image.preview;\n\n    console.log(_image);\n    console.log(typeof _image);\n\n    const _upload = storage\n      .ref(`images/${user_info.user_id}_${new Date().getTime()}`)\n      .putString(_image, \"data_url\");\n\n    _upload.then((snapshot) => {\n      snapshot.ref\n        .getDownloadURL()\n        .then((url) => {\n          console.log(url);\n\n          return url;\n        })\n        .then((url) => {\n          postDB\n            .add({ ...user_info, ..._post, image_url: url })\n            .then((doc) => {\n              let post = { user_info, ..._post, id: doc.id, image_url: url };\n              dispatch(addPost(post));\n              history.replace(\"/\");\n\n              dispatch(imageActions.setPreview(null));\n            })\n            .catch((err) => {\n              window.alert(\"앗! 포스트 작성에 문제가 있어요!\");\n              console.log(\"post 작성에 실패했어요!\", err);\n            });\n        })\n        .catch((err) => {\n          window.alert(\"앗! 이미지 업로드에 문제가 있어요!\");\n          console.log(\"앗! 이미지 업로드에 문제가 있어요!\", err);\n        });\n    });\n  };\n};\n\nconst getPostFB = (start = null, size = 3) => {\n  return function (dispatch, getState, { history }) {\n    // state에서 페이징 정보 가져오기\n    let _paging = getState().post.paging;\n\n    // 시작정보가 기록되었는데 다음 가져올 데이터가 없다면? 앗, 리스트가 끝났겠네요!\n    // 그럼 아무것도 하지말고 return을 해야죠!\n    if (_paging.start && !_paging.next) {\n      return;\n    }\n\n    // 가져오기 시작~!\n    dispatch(loading(true));\n\n    const postDB = firestore.collection(\"post\");\n\n    let query = postDB.orderBy(\"insert_dt\", \"desc\");\n\n    // 시작점 정보가 있으면? 시작점부터 가져오도록 쿼리 수정!\n    if (start) {\n      query = query.startAt(start);\n    }\n\n    // 사이즈보다 1개 더 크게 가져옵시다.\n    // 3개씩 끊어서 보여준다고 할 때, 4개를 가져올 수 있으면? 앗 다음 페이지가 있겠네하고 알 수 있으니까요.\n    // 만약 4개 미만이라면? 다음 페이지는 없겠죠! :)\n    query\n      .limit(size + 1)\n      .get()\n      .then((docs) => {\n        let post_list = [];\n\n        // 새롭게 페이징 정보를 만들어줘요.\n        // 시작점에는 새로 가져온 정보의 시작점을 넣고,\n        // next에는 마지막 항목을 넣습니다.\n        // (이 next가 다음번 리스트 호출 때 start 파라미터로 넘어올거예요.)\n        let paging = {\n          start: docs.docs[0],\n          next:\n            docs.docs.length === size + 1\n              ? docs.docs[docs.docs.length - 1]\n              : null,\n          size: size,\n        };\n\n        docs.forEach((doc) => {\n          let _post = doc.data();\n\n          let post = Object.keys(_post).reduce(\n            (acc, cur) => {\n              if (cur.indexOf(\"user_\") !== -1) {\n                return {\n                  ...acc,\n                  user_info: { ...acc.user_info, [cur]: _post[cur] },\n                };\n              }\n              return { ...acc, [cur]: _post[cur] };\n            },\n            { id: doc.id, user_info: {} }\n          );\n\n          post_list.push(post);\n        });\n\n        // 마지막 하나는 빼줍니다.\n        // 그래야 size대로 리스트가 추가되니까요!\n        // 마지막 데이터는 다음 페이지의 유무를 알려주기 위한 친구일 뿐! 리스트에 들어가지 않아요!\n        post_list.pop();\n\n        dispatch(setPost(post_list, paging));\n      });\n  };\n};\n\nconst getOnePostFB = (id) => {\n  return function (dispatch, getState, { history }) {\n    const postDB = firestore.collection(\"post\");\n    postDB\n      .doc(id)\n      .get()\n      .then((doc) => {\n        let _post = doc.data();\n\n        if (!_post) {\n          return;\n        }\n\n        let post = Object.keys(_post).reduce(\n          (acc, cur) => {\n            if (cur.indexOf(\"user_\") !== -1) {\n              return {\n                ...acc,\n                user_info: { ...acc.user_info, [cur]: _post[cur] },\n              };\n            }\n            return { ...acc, [cur]: _post[cur] };\n          },\n          { id: doc.id, user_info: {} }\n        );\n\n        dispatch(setPost([post]));\n      });\n  };\n};\n\nexport default handleActions(\n  {\n    [SET_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list.push(...action.payload.post_list);\n        draft.list = draft.list.reduce((acc, cur) => {\n          if (acc.findIndex((a) => a.id === cur.id) === -1) {\n            return [...acc, cur];\n          } else {\n            acc[acc.findIndex((a) => a.id === cur.id)] = cur;\n            return acc;\n          }\n        }, []);\n\n        if (action.payload.paging) {\n          draft.paging = action.payload.paging;\n        }\n\n        draft.is_loading = false;\n      }),\n\n    [ADD_POST]: (state, action) =>\n      produce(state, (draft) => {\n        draft.list.unshift(action.payload.post);\n      }),\n    [EDIT_POST]: (state, action) =>\n      produce(state, (draft) => {\n        let idx = draft.list.findIndex((p) => p.id === action.payload.post_id);\n\n        draft.list[idx] = { ...draft.list[idx], ...action.payload.post };\n      }),\n      [DELETE_POST]: (state, action) =>\n      produce(state, (draft) => {\n        let idx = draft.list.findIndex((p) => p.id === action.payload.post_id);\n\n        draft.list.splice(idx)\n      }),\n\n\n    [LODING]: (state, action) =>\n      produce(state, (draft) => {\n        draft.is_loading = action.payload.is_loading;\n      }),\n  },\n  initialState\n);\n\nconst actionCreators = {\n  setPost,\n  addPost,\n  editPost,\n  deletePost,\n  getPostFB,\n  addPostFB,\n  editPostFB,\n  getOnePostFB,\n  deletePostFB,\n};\n\nexport { actionCreators };\n"]},"metadata":{},"sourceType":"module"}