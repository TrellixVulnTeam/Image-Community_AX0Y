{"ast":null,"code":"import { createAction, handleAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\nimport { auth } from \"../../shared/firebase\"; //액션타입 3가지\n\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\"; // action creators\n\nconst logOut = createAction(LOG_OUT, user => ({\n  user\n}));\nconst getUser = createAction(GET_USER, user => ({\n  user\n}));\nconst setUser = createAction(SET_USER, user => ({\n  user\n})); //initialState\n\nconst initialState = {\n  user: null,\n  is_login: false\n};\nconst user_initial = {\n  user_name: 'pear111'\n}; //middleware actions\n\nconst loginAction = user => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    console.log(history);\n    dispatch(setUser(user));\n    history.push('/');\n  };\n};\n\nconst signupFB = (id, pwd, user_name) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    auth.createUserWithEmailAndPassword(id, pwd).then(user => {\n      console.log(user);\n      auth.currentUser.updateProfile({\n        displayName: user_name\n      }).then(() => {\n        dispatch(setUser({\n          user_name: user_name,\n          id: id,\n          user_profile: ''\n        }));\n        history.pupsh('/');\n      }).catch(error => {\n        console.log(error);\n      }); // Signed in\n      // ...\n    }).catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(errorCode, errorMessage); // ..\n    });\n  };\n}; //reducer\n\n\nexport default handleActions({\n  [SET_USER]: (state, action) => produce(state, draft => {\n    setCookie(\"is_login\", \"success\");\n    draft.user = action.payload.user; //payload를 중간에 거쳐야 한다.\n\n    draft.is_login = true;\n  }),\n  [LOG_OUT]: (state, action) => produce(state, draft => {\n    deleteCookie(\"is_login\");\n    draft.user = null;\n    draft.is_login = false;\n  }),\n  [GET_USER]: (state, action) => produce(state, draft => {})\n}, initialState); // action creator export\n\nconst actionCreators = {\n  logOut,\n  getUser,\n  loginAction,\n  signupFB\n};\nexport { actionCreators };","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/user.js"],"names":["createAction","handleAction","handleActions","produce","setCookie","getCookie","deleteCookie","auth","LOG_OUT","GET_USER","SET_USER","logOut","user","getUser","setUser","initialState","is_login","user_initial","user_name","loginAction","dispatch","getState","history","console","log","push","signupFB","id","pwd","createUserWithEmailAndPassword","then","currentUser","updateProfile","displayName","user_profile","pupsh","catch","error","errorCode","code","errorMessage","message","state","action","draft","payload","actionCreators"],"mappings":"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","sourcesContent":["import { createAction, handleAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\n\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\nimport {auth} from \"../../shared/firebase\";\n\n\n//액션타입 3가지\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\";\n\n// action creators\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\nconst getUser = createAction(GET_USER, (user) => ({ user }));\nconst setUser = createAction(SET_USER, (user) => ({ user }));\n\n\n\n//initialState\nconst initialState = {\n  user: null,\n  is_login: false,\n};\n\nconst user_initial = {\n  user_name:'pear111'\n}\n\n\n//middleware actions\nconst loginAction =(user) => {\n  return function (dispatch, getState, {history}){\n    console.log(history);\n    dispatch(setUser(user));\n    history.push('/');\n\n  };\n};\n\nconst signupFB =(id, pwd, user_name) =>{\n  return function (dispatch, getState, {history}){\n\n  auth\n  .createUserWithEmailAndPassword(id, pwd)\n  .then((user) => {\n\n    console.log(user);\n\n    auth.currentUser.updateProfile({\n      displayName: user_name,\n    }).then(() => {\n      dispatch(setUser({user_name: user_name, id: id, user_profile: ''}))\n      history.pupsh('/');\n    }).catch((error) =>{\n      console.log(error);\n    })\n    // Signed in\n    // ...\n  })\n  .catch((error) => {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n\n    console.log(errorCode, errorMessage)\n    // ..\n  });\n\n\n  }\n}\n\n\n\n//reducer\n\nexport default handleActions(\n  {\n    [SET_USER]: (state, action) =>\n      produce(state, (draft) => {\n        setCookie(\"is_login\", \"success\");\n        draft.user = action.payload.user; //payload를 중간에 거쳐야 한다.\n        draft.is_login = true;\n      }),\n    [LOG_OUT]: (state, action) => produce(state, (draft) => {\n      deleteCookie(\"is_login\");\n      draft.user =null;\n      draft.is_login = false;\n\n\n    }),\n      \n    [GET_USER]: (state, action) => produce(state, (draft) => {}),\n  },\n  initialState\n);\n\n// action creator export\nconst actionCreators = {\n  logOut,\n  getUser,\n  loginAction,\n  signupFB,\n};\n\nexport { actionCreators };\n"]},"metadata":{},"sourceType":"module"}