{"ast":null,"code":"import _objectSpread from\"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import React from\"react\";import Post from\"../components/Post\";import{useSelector,useDispatch}from\"react-redux\";import{actionCreators as postActions}from\"../redux/modules/post\";import InfinityScroll from\"../shared/InfinityScroll\";import{Grid}from\"../elements/index\";import{jsx as _jsx}from\"react/jsx-runtime\";var PostList=function PostList(props){var dispatch=useDispatch();var post_list=useSelector(function(state){return state.post.list;});var user_info=useSelector(function(state){return state.user.user;});var is_loading=useSelector(function(state){return state.post.is_loading;});var paging=useSelector(function(state){return state.post.paging;});var history=props.history;React.useEffect(function(){if(post_list.length===0){dispatch(postActions.getPostFB());}},[]);return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(Grid,{bg:\"#EFF6FF\",padding:\"20px 0px 20px 0px\",children:/*#__PURE__*/_jsx(InfinityScroll,{callNext:function callNext(){dispatch(postActions.getPostFB(paging.next));},is_next:paging.next?true:false,loading:true,children:post_list.map(function(p,idx){if(p.user_info.user_id===(user_info===null||user_info===void 0?void 0:user_info.uid)){return/*#__PURE__*/_jsx(Grid,{bg:\"#ffffff\",margin:\"8px 0px\",_onClick:function _onClick(){history.push(\"/post/\".concat(p.id));},children:/*#__PURE__*/_jsx(Post,_objectSpread(_objectSpread({},p),{},{is_me:true}),p.id)},p.id);}else{return/*#__PURE__*/_jsx(Grid,{bg:\"#ffffff\",_onClick:function _onClick(){history.push(\"/post/\".concat(p.id));},children:/*#__PURE__*/_jsx(Post,_objectSpread({},p))},p.id);}})})})});};export default PostList;","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostList.js"],"names":["React","Post","useSelector","useDispatch","actionCreators","postActions","InfinityScroll","Grid","PostList","props","dispatch","post_list","state","post","list","user_info","user","is_loading","paging","history","useEffect","length","getPostFB","next","map","p","idx","user_id","uid","push","id"],"mappings":"yKAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,OAASC,WAAT,CAAsBC,WAAtB,KAAyC,aAAzC,CACA,OAASC,cAAc,GAAIC,CAAAA,WAA3B,KAA8C,uBAA9C,CACA,MAAOC,CAAAA,cAAP,KAA2B,0BAA3B,CACA,OAAQC,IAAR,KAAmB,mBAAnB,C,2CAIA,GAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,KAAD,CAAW,CAC1B,GAAMC,CAAAA,QAAQ,CAAGP,WAAW,EAA5B,CACA,GAAMQ,CAAAA,SAAS,CAAGT,WAAW,CAAC,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,CAAWC,IAAtB,EAAD,CAA7B,CACA,GAAMC,CAAAA,SAAS,CAAGb,WAAW,CAAC,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACI,IAAN,CAAWA,IAAtB,EAAD,CAA7B,CACA,GAAMC,CAAAA,UAAU,CAAGf,WAAW,CAAC,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,CAAWI,UAAtB,EAAD,CAA9B,CACA,GAAMC,CAAAA,MAAM,CAAGhB,WAAW,CAAC,SAACU,KAAD,QAAWA,CAAAA,KAAK,CAACC,IAAN,CAAWK,MAAtB,EAAD,CAA1B,CAL0B,GAQpBC,CAAAA,OARoB,CAQTV,KARS,CAQpBU,OARoB,CAU1BnB,KAAK,CAACoB,SAAN,CAAgB,UAAM,CACpB,GAAIT,SAAS,CAACU,MAAV,GAAqB,CAAzB,CAA4B,CAC1BX,QAAQ,CAACL,WAAW,CAACiB,SAAZ,EAAD,CAAR,CACD,CACF,CAJD,CAIG,EAJH,EAMA,mBACE,KAAC,KAAD,CAAO,QAAP,wBACI,KAAC,IAAD,EAAM,EAAE,CAAE,SAAV,CAAqB,OAAO,CAAE,mBAA9B,uBACF,KAAC,cAAD,EACA,QAAQ,CAAK,mBAAK,CACdZ,QAAQ,CAACL,WAAW,CAACiB,SAAZ,CAAsBJ,MAAM,CAACK,IAA7B,CAAD,CAAR,CACL,CAHC,CAKF,OAAO,CAAGL,MAAM,CAACK,IAAP,CAAa,IAAb,CAAmB,KAL3B,CAMF,OAAO,CAAE,IANP,UAUGZ,SAAS,CAACa,GAAV,CAAc,SAACC,CAAD,CAAIC,GAAJ,CAAY,CACzB,GAAID,CAAC,CAACV,SAAF,CAAYY,OAAZ,IAAwBZ,SAAxB,SAAwBA,SAAxB,iBAAwBA,SAAS,CAAEa,GAAnC,CAAJ,CAA4C,CAC1C,mBACI,KAAC,IAAD,EACA,EAAE,CAAC,SADH,CAEA,MAAM,CAAC,SAFP,CAIA,QAAQ,CAAE,mBAAM,CACdT,OAAO,CAACU,IAAR,iBAAsBJ,CAAC,CAACK,EAAxB,GACD,CAND,uBAQA,KAAC,IAAD,gCAAqBL,CAArB,MAAwB,KAAK,KAA7B,GAAWA,CAAC,CAACK,EAAb,CARA,EAGKL,CAAC,CAACK,EAHP,CADJ,CAYD,CAbD,IAaO,CACL,mBACI,KAAC,IAAD,EAEI,EAAE,CAAC,SAFP,CAGI,QAAQ,CAAE,mBAAM,CACdX,OAAO,CAACU,IAAR,iBAAsBJ,CAAC,CAACK,EAAxB,GACD,CALL,uBAOI,KAAC,IAAD,kBAAUL,CAAV,EAPJ,EACHA,CAAC,CAACK,EADC,CADJ,CAWD,CACF,CA3BA,CAVH,EADE,EADJ,EADF,CA8CD,CA9DD,CAgEA,cAAetB,CAAAA,QAAf","sourcesContent":["import React from \"react\";\nimport Post from \"../components/Post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport InfinityScroll from \"../shared/InfinityScroll\";\nimport {Grid} from \"../elements/index\"\n\n\n\nconst PostList = (props) => {\n  const dispatch = useDispatch();\n  const post_list = useSelector((state) => state.post.list);\n  const user_info = useSelector((state) => state.user.user);\n  const is_loading = useSelector((state) => state.post.is_loading);\n  const paging = useSelector((state) => state.post.paging);\n\n\n  const{history} = props;\n\n  React.useEffect(() => {\n    if (post_list.length === 0) {\n      dispatch(postActions.getPostFB());\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n        <Grid bg={\"#EFF6FF\"} padding =\"20px 0px 20px 0px\">\n      <InfinityScroll\n      callNext = { () =>{\n          dispatch(postActions.getPostFB(paging.next))      \n    }}\n\n    is_next ={paging.next? true: false}\n    loading={true}\n      >\n        \n\n        {post_list.map((p, idx) => {\n          if (p.user_info.user_id === user_info?.uid) {\n            return (\n                <Grid\n                bg=\"#ffffff\"\n                margin=\"8px 0px\"\n                key={p.id}\n                _onClick={() => {\n                  history.push(`/post/${p.id}`);\n                }}\n              >\n                <Post key={p.id} {...p} is_me />\n              </Grid>\n            );\n          } else {\n            return (\n                <Grid\n\t\t\t\t    key={p.id}\n                    bg=\"#ffffff\"\n                    _onClick={() => {\n                      history.push(`/post/${p.id}`);\n                    }}\n                  >\n                    <Post {...p} />\n                  </Grid>\n            );\n          }\n        })}\n      </InfinityScroll>\n      </Grid>\n\n    </React.Fragment>\n  );\n};\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}