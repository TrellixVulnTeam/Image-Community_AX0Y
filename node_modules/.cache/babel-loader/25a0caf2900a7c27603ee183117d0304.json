{"ast":null,"code":"import _objectSpread from\"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import{Grid,Text,Image}from\"../elements\";import Card from\"../components/Card\";import{realtime}from\"../shared/firebase\";import{useSelector}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";var Notification=function Notification(props){var _React$useState=React.useState([]),_React$useState2=_slicedToArray(_React$useState,2),noti=_React$useState2[0],setNoti=_React$useState2[1];var user=useSelector(function(state){return state.user.user;});React.useEffect(function(){if(!user){return;}var notiDB=realtime.ref(\"noti/\".concat(user.uid,\"/list\"));// firebase realtime database는 내림차순 정렬을 지원하지 않아요!\n// 데이터를 가져온 후 직접 역순으로 내보내야 합니다!\nvar _noti=notiDB.orderByChild(\"insert_dt\");_noti.once('value',function(snapshot){if(snapshot.exists()){var _data=snapshot.val();// reserse()는 배열을 역순으로 뒤집어줘요.\nvar _noti_list=Object.keys(_data).reverse().map(function(s){return _data[s];});setNoti(_noti_list);}});},[user]);return/*#__PURE__*/_jsx(React.Fragment,{children:/*#__PURE__*/_jsx(Grid,{padding:\"16px\",bg:\"#EFF6FF\",children:noti.map(function(n,idx){return/*#__PURE__*/_jsx(Card,_objectSpread({},n),\"noti_\".concat(idx));})})});};export default Notification;","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/Notification.js"],"names":["React","Grid","Text","Image","Card","realtime","useSelector","Notification","props","useState","noti","setNoti","user","state","useEffect","notiDB","ref","uid","_noti","orderByChild","once","snapshot","exists","_data","val","_noti_list","Object","keys","reverse","map","s","n","idx"],"mappings":"mVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAAQC,IAAR,CAAcC,IAAd,CAAoBC,KAApB,KAAgC,aAAhC,CACA,MAAOC,CAAAA,IAAP,KAAiB,oBAAjB,CACA,OAAQC,QAAR,KAAuB,oBAAvB,CACA,OAAQC,WAAR,KAA0B,aAA1B,C,2CAGA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACC,KAAD,CAAU,qBAEHR,KAAK,CAACS,QAAN,CAAe,EAAf,CAFG,oDAEpBC,IAFoB,qBAEdC,OAFc,qBAI3B,GAAMC,CAAAA,IAAI,CAAGN,WAAW,CAAC,SAAAO,KAAK,QAAIA,CAAAA,KAAK,CAACD,IAAN,CAAWA,IAAf,EAAN,CAAxB,CAEAZ,KAAK,CAACc,SAAN,CAAgB,UAAM,CAEpB,GAAG,CAACF,IAAJ,CAAS,CACP,OACD,CAED,GAAMG,CAAAA,MAAM,CAAGV,QAAQ,CAACW,GAAT,gBAAqBJ,IAAI,CAACK,GAA1B,UAAf,CAEA;AACA;AACA,GAAMC,CAAAA,KAAK,CAAGH,MAAM,CAACI,YAAP,CAAoB,WAApB,CAAd,CAEAD,KAAK,CAACE,IAAN,CAAW,OAAX,CAAoB,SAAAC,QAAQ,CAAI,CAE9B,GAAGA,QAAQ,CAACC,MAAT,EAAH,CAAqB,CACnB,GAAIC,CAAAA,KAAK,CAAGF,QAAQ,CAACG,GAAT,EAAZ,CAEA;AACA,GAAIC,CAAAA,UAAU,CAAGC,MAAM,CAACC,IAAP,CAAYJ,KAAZ,EAAmBK,OAAnB,GAA6BC,GAA7B,CAAiC,SAAAC,CAAC,CAAI,CACrD,MAAOP,CAAAA,KAAK,CAACO,CAAD,CAAZ,CACD,CAFgB,CAAjB,CAIAnB,OAAO,CAACc,UAAD,CAAP,CACD,CAEF,CAbD,EAcD,CA1BD,CA0BG,CAACb,IAAD,CA1BH,EA8BA,mBACI,KAAC,KAAD,CAAO,QAAP,wBACM,KAAC,IAAD,EAAM,OAAO,CAAC,MAAd,CAAqB,EAAE,CAAC,SAAxB,UACDF,IAAI,CAACmB,GAAL,CAAS,SAACE,CAAD,CAAIC,GAAJ,CAAY,CAClB,mBACI,KAAC,IAAD,kBAA8BD,CAA9B,iBAAmBC,GAAnB,EADJ,CAGH,CAJA,CADC,EADN,EADJ,CAWH,CA/CD,CAmDA,cAAezB,CAAAA,YAAf","sourcesContent":["import React from \"react\";\nimport {Grid, Text, Image} from \"../elements\";\nimport Card from \"../components/Card\"\nimport {realtime} from \"../shared/firebase\";\nimport {useSelector} from \"react-redux\";\n\n\nconst Notification = (props) =>{\n\n    const [noti, setNoti] = React.useState([]);\n\n    const user = useSelector(state => state.user.user);\n\n    React.useEffect(() => {\n\n      if(!user){\n        return;\n      }\n\n      const notiDB = realtime.ref(`noti/${user.uid}/list`);\n      \n      // firebase realtime database는 내림차순 정렬을 지원하지 않아요!\n      // 데이터를 가져온 후 직접 역순으로 내보내야 합니다!\n      const _noti = notiDB.orderByChild(\"insert_dt\");\n      \n      _noti.once('value', snapshot => {\n        \n        if(snapshot.exists()){\n          let _data = snapshot.val();\n\n          // reserse()는 배열을 역순으로 뒤집어줘요.\n          let _noti_list = Object.keys(_data).reverse().map(s => {\n            return _data[s];\n          });\n\n          setNoti(_noti_list);\n        }\n        \n      })\n    }, [user]);\n\n\n    \n    return(\n        <React.Fragment>\n              <Grid padding=\"16px\" bg=\"#EFF6FF\">\n            {noti.map((n, idx) => {\n                return (\n                    <Card key={`noti_${idx}`} {...n}/>\n                )\n            })}\n        </Grid>\n        </React.Fragment>\n    )\n}\n\n\n\nexport default Notification;"]},"metadata":{},"sourceType":"module"}