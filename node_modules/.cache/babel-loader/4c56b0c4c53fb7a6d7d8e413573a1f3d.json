{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport firebase from \"../../shared/firebase\";\nimport \"firebase/firestore\";\nimport { firestore } from \"../../shared/firebase\";\nconst SET_POST = \"SET_POST\";\nconst ADD_POST = \"ADD_POST\";\nconst setPost = createAction(SET_POST, post_list => ({\n  post_list\n}));\nconst addPost = createAction(ADD_POST, post => ({\n  post\n}));\nconst initialState = {\n  list: []\n};\nconst initialPost = {\n  id: 0,\n  user_info: {\n    user_name: \"joy\",\n    user_profile: \"ttps://www.vmcdn.ca/f/files/piquenewsmagazine/import/2015-33_news_mtnnews2-1-cd1c0a5e13e77f75.jpg;w=640\"\n  },\n  image_url: \"ttps://www.vmcdn.ca/f/files/piquenewsmagazine/import/2015-33_news_mtnnews2-1-cd1c0a5e13e77f75.jpg;w=640\",\n  contents: \"Love Lake Luise\",\n  comment_cnt: 22,\n  insert_dt: \"2021-03-28 10:00:00\"\n};\n\nconst getPostFB = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const postDB = firestore.collection(\"post\");\n    postDB.get().then(docs => {\n      let post_list = [];\n      docs.forEach(doc => {\n        let _post = {\n          id: doc.id,\n          ...doc.data()\n        };\n        let post = {\n          id: doc.id,\n          id: 0,\n          user_info: {\n            user_name: _post.user_name,\n            user_profile: _post.user_profile,\n            user_id: _post.user_id\n          },\n          image_url: _post.image_url,\n          contents: _post.contents,\n          comment_cnt: _post.comment_cnt,\n          insert_dt: _post.insert_dt\n        };\n        post_list.push(post);\n      });\n      console.log(post_list);\n      dispatch(setPost(post_list));\n    });\n  };\n}; //리듀서\n\n\nexport default handleActions({\n  [SET_POST]: (state, action) => produce(state, draft => {}),\n  [ADD_POST]: (state, action) => produce(state, draft => {})\n}, initialState);\nconst actionCreators = {\n  setPost,\n  addPost,\n  getPostFB\n};\nexport { actionCreators };","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/post.js"],"names":["createAction","handleActions","produce","firebase","firestore","SET_POST","ADD_POST","setPost","post_list","addPost","post","initialState","list","initialPost","id","user_info","user_name","user_profile","image_url","contents","comment_cnt","insert_dt","getPostFB","dispatch","getState","history","postDB","collection","get","then","docs","forEach","doc","_post","data","user_id","push","console","log","state","action","draft","actionCreators"],"mappings":"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","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport firebase from \"../../shared/firebase\";\nimport \"firebase/firestore\";\nimport { firestore } from \"../../shared/firebase\";\n\nconst SET_POST = \"SET_POST\";\nconst ADD_POST = \"ADD_POST\";\n\nconst setPost = createAction(SET_POST, (post_list) => ({ post_list }));\nconst addPost = createAction(ADD_POST, (post) => ({ post }));\n\nconst initialState = {\n  list: [],\n};\n\nconst initialPost = {\n  id: 0,\n  user_info: {\n    user_name: \"joy\",\n    user_profile:\n      \"ttps://www.vmcdn.ca/f/files/piquenewsmagazine/import/2015-33_news_mtnnews2-1-cd1c0a5e13e77f75.jpg;w=640\",\n  },\n  image_url:\n    \"ttps://www.vmcdn.ca/f/files/piquenewsmagazine/import/2015-33_news_mtnnews2-1-cd1c0a5e13e77f75.jpg;w=640\",\n  contents: \"Love Lake Luise\",\n  comment_cnt: 22,\n  insert_dt: \"2021-03-28 10:00:00\",\n};\n\nconst getPostFB = () => {\n  return function (dispatch, getState, { history }) {\n    const postDB = firestore.collection(\"post\");\n\n    postDB.get().then((docs) => {\n\n        let post_list =[];\n      docs.forEach((doc) => {\n            \n        let _post = {\n          id: doc.id,\n          ...doc.data(),\n        };\n\n        let post = {\n          id: doc.id,\n          id: 0,\n          user_info: {\n            user_name: _post.user_name,\n            user_profile: _post.user_profile,\n            user_id: _post.user_id,\n          },\n          image_url: _post.image_url,\n          contents: _post.contents,\n          comment_cnt: _post.comment_cnt,\n          insert_dt: _post.insert_dt,\n        };\n\n        post_list.push(post);\n      })\n\n      console.log(post_list);\n      dispatch(setPost(post_list));\n    });\n  };\n};\n\n//리듀서\nexport default handleActions(\n  {\n    [SET_POST]: (state, action) => produce(state, (draft) => {}),\n    [ADD_POST]: (state, action) => produce(state, (draft) => {}),\n  },\n  initialState\n);\n\nconst actionCreators = {\n  setPost,\n  addPost,\n  getPostFB,\n};\n\nexport { actionCreators };\n"]},"metadata":{},"sourceType":"module"}