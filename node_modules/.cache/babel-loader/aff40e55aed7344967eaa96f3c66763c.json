{"ast":null,"code":"import _defineProperty from\"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var _handleActions;import{createAction,handleActions}from\"redux-actions\";import{produce}from\"immer\";import{firestore,realtime}from\"../../shared/firebase\";import\"moment\";import moment from\"moment\";import firebase from\"firebase/app\";import{actionCreators as postActions}from\"./post\";var SET_COMMENT=\"SET_COMMENT\";var ADD_COMMENT=\"ADD_COMMENT\";var LOADING=\"LOADING\";var setComment=createAction(SET_COMMENT,function(post_id,comment_list){return{post_id:post_id,comment_list:comment_list};});var addComment=createAction(ADD_COMMENT,function(post_id,comment){return{post_id:post_id,comment:comment};});var loading=createAction(LOADING,function(is_loading){return{is_loading:is_loading};});var initialState={list:{},is_loading:false};var addCommentFB=function addCommentFB(post_id,contents){return function(dispatch,getState,_ref){var history=_ref.history;var post=getState().post.list.find(function(l){return l.id===post_id;});var commentDB=firestore.collection(\"comment\");var user_info=getState().user.user;var comment={post_id:post_id,user_id:user_info.uid,user_name:user_info.user_name,user_profile:user_info.user_profile,contents:contents,insert_dt:moment().format(\"YYY-MM-DD hh:mm:ss\")};commentDB.add(comment).then(function(doc){var postDB=firestore.collection(\"post\");// increment 카운트수를 하나만큼 증가시켜 준다. \nvar increment=firebase.firestore.FieldValue.increment(1);comment=_objectSpread(_objectSpread({},comment),{},{id:doc.id});postDB.doc(post_id).update({comment_cnt:increment}).then(function(_post){dispatch(addComment(post_id,comment));if(post){dispatch(postActions.editPost(post_id,{commen_cnt:parseInt(post.comment_cnt)+1}));//parseInt 숫자형으로 형 변환\nvar _noti_item=realtime.ref(\"noti/\".concat(post.user_info.user_id,\"/list\")).push();_noti_item.set({post_id:post.id,user_name:comment.user_name,imge_url:post.image_url,insert_dt:comment.insert_dt},function(err){if(err){console.log(\"알림 저장에 실패 했어요!\");}else{var notiDB=realtime.ref(\"noti/\".concat(post.user_info.user_id));notiDB.update({read:false});}});}});});};};var getCommentFB=function getCommentFB(post_id){return function(dispatch,getState,_ref2){var history=_ref2.history;if(!post_id){return;}var commentDB=firestore.collection(\"comment\");commentDB.where(\"post_id\",\"==\",post_id).orderBy(\"insert_dt\",\"desc\").get().then(function(docs){var list=[];docs.forEach(function(doc){list.push(_objectSpread(_objectSpread({},doc.data()),{},{id:doc.id}));});dispatch(setComment(post_id,list));}).catch(function(err){console.log('댓글 정보를 가져올 수가 없네요!',err);});};};export default handleActions((_handleActions={},_defineProperty(_handleActions,SET_COMMENT,function(state,action){return produce(state,function(draft){draft.list[action.payload.post_id]=action.payload.comment_list;});}),_defineProperty(_handleActions,ADD_COMMENT,function(state,action){return produce(state,function(draft){draft.list[action.payload.post_id].unshift(action.payload.comment);});}),_defineProperty(_handleActions,LOADING,function(state,action){return produce(state,function(draft){draft.is_loading=action.payload.is_loading;});}),_handleActions),initialState);var actionCreators={getCommentFB:getCommentFB,setComment:setComment,addComment:addComment,addCommentFB:addCommentFB};export{actionCreators};","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/comment.js"],"names":["createAction","handleActions","produce","firestore","realtime","moment","firebase","actionCreators","postActions","SET_COMMENT","ADD_COMMENT","LOADING","setComment","post_id","comment_list","addComment","comment","loading","is_loading","initialState","list","addCommentFB","contents","dispatch","getState","history","post","find","l","id","commentDB","collection","user_info","user","user_id","uid","user_name","user_profile","insert_dt","format","add","then","doc","postDB","increment","FieldValue","update","comment_cnt","_post","editPost","commen_cnt","parseInt","_noti_item","ref","push","set","imge_url","image_url","err","console","log","notiDB","read","getCommentFB","where","orderBy","get","docs","forEach","data","catch","state","action","draft","payload","unshift"],"mappings":"wWAAA,OAASA,YAAT,CAAuBC,aAAvB,KAA4C,eAA5C,CACA,OAASC,OAAT,KAAwB,OAAxB,CACA,OAASC,SAAT,CAAoBC,QAApB,KAAoC,uBAApC,CACA,MAAO,QAAP,CACA,MAAOC,CAAAA,MAAP,KAAmB,QAAnB,CACA,MAAOC,CAAAA,QAAP,KAAqB,cAArB,CAEA,OAAQC,cAAc,GAAIC,CAAAA,WAA1B,KAA6C,QAA7C,CAEA,GAAMC,CAAAA,WAAW,CAAG,aAApB,CACA,GAAMC,CAAAA,WAAW,CAAG,aAApB,CAEA,GAAMC,CAAAA,OAAO,CAAG,SAAhB,CAEA,GAAMC,CAAAA,UAAU,CAAGZ,YAAY,CAACS,WAAD,CAAc,SAACI,OAAD,CAAUC,YAAV,QAA4B,CAACD,OAAO,CAAPA,OAAD,CAAUC,YAAY,CAAZA,YAAV,CAA5B,EAAd,CAA/B,CACA,GAAMC,CAAAA,UAAU,CAAGf,YAAY,CAACU,WAAD,CAAc,SAACG,OAAD,CAAUG,OAAV,QAAuB,CAACH,OAAO,CAAPA,OAAD,CAAUG,OAAO,CAAPA,OAAV,CAAvB,EAAd,CAA/B,CAEA,GAAMC,CAAAA,OAAO,CAAGjB,YAAY,CAACW,OAAD,CAAU,SAACO,UAAD,QAAiB,CAAEA,UAAU,CAAVA,UAAF,CAAjB,EAAV,CAA5B,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,IAAI,CAAE,EADa,CAEnBF,UAAU,CAAE,KAFO,CAArB,CAKA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAACR,OAAD,CAAUS,QAAV,CAAuB,CAC1C,MAAO,UAASC,QAAT,CAAmBC,QAAnB,MAAuC,IAATC,CAAAA,OAAS,MAATA,OAAS,CAG5C,GAAMC,CAAAA,IAAI,CAAGF,QAAQ,GAAGE,IAAX,CAAgBN,IAAhB,CAAqBO,IAArB,CAA0B,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACC,EAAF,GAAQhB,OAAZ,EAA3B,CAAb,CACA,GAAMiB,CAAAA,SAAS,CAAG3B,SAAS,CAAC4B,UAAV,CAAqB,SAArB,CAAlB,CACA,GAAMC,CAAAA,SAAS,CAAGR,QAAQ,GAAGS,IAAX,CAAgBA,IAAlC,CAEA,GAAIjB,CAAAA,OAAO,CAAE,CACXH,OAAO,CAAEA,OADE,CAEXqB,OAAO,CAAEF,SAAS,CAACG,GAFR,CAGXC,SAAS,CAAEJ,SAAS,CAACI,SAHV,CAIXC,YAAY,CAAEL,SAAS,CAACK,YAJb,CAKXf,QAAQ,CAAEA,QALC,CAMXgB,SAAS,CAAEjC,MAAM,GAAGkC,MAAT,CAAgB,oBAAhB,CANA,CAAb,CAQAT,SAAS,CAACU,GAAV,CAAcxB,OAAd,EAAuByB,IAAvB,CAA4B,SAACC,GAAD,CAAS,CACnC,GAAMC,CAAAA,MAAM,CAAGxC,SAAS,CAAC4B,UAAV,CAAqB,MAArB,CAAf,CACA;AACA,GAAMa,CAAAA,SAAS,CAAGtC,QAAQ,CAACH,SAAT,CAAmB0C,UAAnB,CAA8BD,SAA9B,CAAwC,CAAxC,CAAlB,CAGA5B,OAAO,gCAAMA,OAAN,MAAea,EAAE,CAAEa,GAAG,CAACb,EAAvB,EAAP,CACAc,MAAM,CACLD,GADD,CACK7B,OADL,EAECiC,MAFD,CAEQ,CAACC,WAAW,CAAEH,SAAd,CAFR,EAGCH,IAHD,CAGM,SAACO,KAAD,CAAU,CACdzB,QAAQ,CAACR,UAAU,CAACF,OAAD,CAAUG,OAAV,CAAX,CAAR,CAEA,GAAGU,IAAH,CAAQ,CACNH,QAAQ,CAACf,WAAW,CAACyC,QAAZ,CAAqBpC,OAArB,CAA8B,CAACqC,UAAU,CAAEC,QAAQ,CAACzB,IAAI,CAACqB,WAAN,CAAR,CAA2B,CAAxC,CAA9B,CAAD,CAAR,CAEI;AAEJ,GAAMK,CAAAA,UAAU,CAAGhD,QAAQ,CAACiD,GAAT,gBAAqB3B,IAAI,CAACM,SAAL,CAAeE,OAApC,WAAoDoB,IAApD,EAAnB,CACAF,UAAU,CAACG,GAAX,CAAe,CACb1C,OAAO,CAAEa,IAAI,CAACG,EADD,CAEbO,SAAS,CAAEpB,OAAO,CAACoB,SAFN,CAGboB,QAAQ,CAAE9B,IAAI,CAAC+B,SAHF,CAIbnB,SAAS,CAAEtB,OAAO,CAACsB,SAJN,CAAf,CAKG,SAACoB,GAAD,CAAQ,CACT,GAAGA,GAAH,CAAO,CACLC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EACD,CAFD,IAEK,CACH,GAAMC,CAAAA,MAAM,CAAGzD,QAAQ,CAACiD,GAAT,gBAAqB3B,IAAI,CAACM,SAAL,CAAeE,OAApC,EAAf,CACA2B,MAAM,CAACf,MAAP,CAAc,CAACgB,IAAI,CAAC,KAAN,CAAd,EACD,CACJ,CAZC,EAaD,CAGF,CA5BD,EA6BD,CApCD,EAqCD,CApDD,CAqDD,CAtDD,CAwDA,GAAMC,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAClD,OAAD,CAAa,CAC9B,MAAO,UAASU,QAAT,CAAmBC,QAAnB,OAAuC,IAATC,CAAAA,OAAS,OAATA,OAAS,CAC9C,GAAG,CAACZ,OAAJ,CAAY,CACV,OACD,CACD,GAAMiB,CAAAA,SAAS,CAAG3B,SAAS,CAAC4B,UAAV,CAAqB,SAArB,CAAlB,CACAD,SAAS,CACRkC,KADD,CACO,SADP,CACkB,IADlB,CACwBnD,OADxB,EAECoD,OAFD,CAES,WAFT,CAEsB,MAFtB,EAGCC,GAHD,GAICzB,IAJD,CAIM,SAAC0B,IAAD,CAAU,CACd,GAAI/C,CAAAA,IAAI,CAAE,EAAV,CAEA+C,IAAI,CAACC,OAAL,CAAa,SAAC1B,GAAD,CAAQ,CACnBtB,IAAI,CAACkC,IAAL,gCAAcZ,GAAG,CAAC2B,IAAJ,EAAd,MAA0BxC,EAAE,CAAEa,GAAG,CAACb,EAAlC,IACD,CAFD,EAGAN,QAAQ,CAACX,UAAU,CAACC,OAAD,CAAUO,IAAV,CAAX,CAAR,CACD,CAXD,EAWGkD,KAXH,CAWS,SAAAZ,GAAG,CAAG,CACbC,OAAO,CAACC,GAAR,CAAY,oBAAZ,CAAkCF,GAAlC,EACD,CAbD,EAeC,CApBD,CAqBH,CAtBD,CAyBA,cAAezD,CAAAA,aAAa,mDAErBQ,WAFqB,CAEP,SAAC8D,KAAD,CAAQC,MAAR,QAAmBtE,CAAAA,OAAO,CAACqE,KAAD,CAAQ,SAACE,KAAD,CAAW,CAC1DA,KAAK,CAACrD,IAAN,CAAWoD,MAAM,CAACE,OAAP,CAAe7D,OAA1B,EAAqC2D,MAAM,CAACE,OAAP,CAAe5D,YAApD,CACD,CAFwC,CAA1B,EAFO,iCAKrBJ,WALqB,CAKP,SAAC6D,KAAD,CAAQC,MAAR,QAAmBtE,CAAAA,OAAO,CAACqE,KAAD,CAAQ,SAACE,KAAD,CAAU,CACzDA,KAAK,CAACrD,IAAN,CAAWoD,MAAM,CAACE,OAAP,CAAe7D,OAA1B,EAAmC8D,OAAnC,CAA2CH,MAAM,CAACE,OAAP,CAAe1D,OAA1D,EAED,CAHwC,CAA1B,EALO,iCASrBL,OATqB,CASX,SAAC4D,KAAD,CAAQC,MAAR,QACXtE,CAAAA,OAAO,CAACqE,KAAD,CAAQ,SAACE,KAAD,CAAW,CACxBA,KAAK,CAACvD,UAAN,CAAmBsD,MAAM,CAACE,OAAP,CAAexD,UAAlC,CACD,CAFM,CADI,EATW,kBAc1BC,YAd0B,CAA5B,CAiBA,GAAMZ,CAAAA,cAAc,CAAG,CACrBwD,YAAY,CAAZA,YADqB,CAErBnD,UAAU,CAAVA,UAFqB,CAGrBG,UAAU,CAAVA,UAHqB,CAIrBM,YAAY,CAAZA,YAJqB,CAAvB,CAOA,OAASd,cAAT","sourcesContent":["import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { firestore, realtime } from \"../../shared/firebase\";\nimport \"moment\";\nimport moment from \"moment\";\nimport firebase from \"firebase/app\"\n\nimport {actionCreators as postActions } from \"./post\"\n\nconst SET_COMMENT = \"SET_COMMENT\";\nconst ADD_COMMENT = \"ADD_COMMENT\";\n\nconst LOADING = \"LOADING\";\n\nconst setComment = createAction(SET_COMMENT, (post_id, comment_list) => ({post_id, comment_list}));\nconst addComment = createAction(ADD_COMMENT, (post_id, comment) => ({post_id, comment}));\n\nconst loading = createAction(LOADING, (is_loading) => ({ is_loading }));\n\nconst initialState = {\n  list: {},\n  is_loading: false,\n};\n\nconst addCommentFB = (post_id, contents) => {\n  return function(dispatch, getState, {history}){\n\n\n    const post = getState().post.list.find(l => l.id ===post_id);\n    const commentDB = firestore.collection(\"comment\");\n    const user_info = getState().user.user;\n\n    let comment ={\n      post_id: post_id,\n      user_id: user_info.uid,\n      user_name: user_info.user_name,\n      user_profile: user_info.user_profile,\n      contents: contents,\n      insert_dt: moment().format(\"YYY-MM-DD hh:mm:ss\")\n    }\n    commentDB.add(comment).then((doc) => {\n      const postDB = firestore.collection(\"post\");\n      // increment 카운트수를 하나만큼 증가시켜 준다. \n      const increment = firebase.firestore.FieldValue.increment(1);\n\n\n      comment ={...comment, id: doc.id}\n      postDB\n      .doc(post_id)\n      .update({comment_cnt: increment})\n      .then((_post) =>{\n        dispatch(addComment(post_id, comment));\n\n        if(post){\n          dispatch(postActions.editPost(post_id, {commen_cnt: parseInt(post.comment_cnt)+1,\n          })\n          );  //parseInt 숫자형으로 형 변환\n\n          const _noti_item = realtime.ref(`noti/${post.user_info.user_id}/list`).push();\n          _noti_item.set({\n            post_id: post.id,\n            user_name: comment.user_name,\n            imge_url: post.image_url,\n            insert_dt: comment.insert_dt,\n          }, (err) =>{\n            if(err){\n              console.log(\"알림 저장에 실패 했어요!\")\n            }else{\n              const notiDB = realtime.ref(`noti/${post.user_info.user_id}`);\n              notiDB.update({read:false});\n            }\n        });\n        }\n\n        \n      }) \n    })\n  }\n}\n\nconst getCommentFB = (post_id) => {\n    return function(dispatch, getState, {history}){\n    if(!post_id){\n      return\n    }\n    const commentDB = firestore.collection(\"comment\");\n    commentDB\n    .where(\"post_id\", \"==\", post_id)\n    .orderBy(\"insert_dt\", \"desc\")\n    .get()\n    .then((docs) => {\n      let list =[];\n\n      docs.forEach((doc) =>{\n        list.push({...doc.data(), id: doc.id})\n      })\n      dispatch(setComment(post_id, list));\n    }).catch(err =>{\n      console.log('댓글 정보를 가져올 수가 없네요!', err);\n    });\n\n    }\n}\n\n\nexport default handleActions(\n  {\n      [SET_COMMENT]: (state, action) => produce(state, (draft) => {\n        draft.list[action.payload.post_id] = action.payload.comment_list;\n      }),\n      [ADD_COMMENT]: (state, action) => produce(state, (draft)=> {\n        draft.list[action.payload.post_id].unshift(action.payload.comment);\n\n      }),\n      [LOADING]: (state, action) => \n      produce(state, (draft) => {\n        draft.is_loading = action.payload.is_loading;\n      })\n  },\n  initialState\n);\n\nconst actionCreators = {\n  getCommentFB,\n  setComment,\n  addComment,\n  addCommentFB,\n};\n\nexport { actionCreators };"]},"metadata":{},"sourceType":"module"}