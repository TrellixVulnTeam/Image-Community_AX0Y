{"ast":null,"code":"var _jsxFileName = \"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Post from \"../components/Post\";\nimport CommentList from \"../components/CommentList\";\nimport CommentWrite from \"../components/CommentWrite\";\nimport { useSelector } from \"react-redux\";\nimport { firestore } from \"../shared/firebase\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetail = props => {\n  _s();\n\n  const id = props.match.params.id;\n  const user_info = useSelector(state => state.user.user);\n  const post_list = useSelector(store => store.post.list);\n  const post_idx = post_list.findIndex(p => p.id === id);\n  const post_data = post_list[post_idx];\n  const [post, setPost] = React.useState(post_data ? post_data : null);\n  React.useEffect(() => {\n    const postDB = firestore.collection(\"post\");\n    postDB.doc(id).get().then(doc => {\n      let _post = doc.data(); // ['comment_cnt', 'contents',...] 배열로 만들어 줌\n\n\n      let post = Object.keys(_post).reduce((acc, cur) => {\n        if (cur.indexOf(\"user_\") !== -1) {\n          return { ...acc,\n            user_info: { ...acc.user_info,\n              [cur]: _post[cur]\n            }\n          };\n        }\n\n        return { ...acc,\n          [cur]: _post[cur]\n        };\n      }, {\n        id: doc.id,\n        user_info: {}\n      });\n      post_list.push(post);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Post, { ...post,\n      is_me: post.user_info.user_id === user_info.uid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentWrite, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostDetail, \"MZIiRZlxl8RMdu5PeUe2rxtVCII=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostDetail.js"],"names":["React","Post","CommentList","CommentWrite","useSelector","firestore","PostDetail","props","id","match","params","user_info","state","user","post_list","store","post","list","post_idx","findIndex","p","post_data","setPost","useState","useEffect","postDB","collection","doc","get","then","_post","data","Object","keys","reduce","acc","cur","indexOf","push","user_id","uid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,SAAQC,WAAR,QAA0B,aAA1B;AACA,SAAQC,SAAR,QAAwB,oBAAxB;;;AAEA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAG1B,QAAMC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AACA,QAAMG,SAAS,GAAGP,WAAW,CAAEQ,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWA,IAAvB,CAA7B;AACA,QAAMC,SAAS,GAAGV,WAAW,CAACW,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAArB,CAA7B;AACA,QAAMC,QAAQ,GAAGJ,SAAS,CAACK,SAAV,CAAqBC,CAAC,IAAIA,CAAC,CAACZ,EAAF,KAASA,EAAnC,CAAjB;AACA,QAAMa,SAAS,GAAGP,SAAS,CAACI,QAAD,CAA3B;AAEA,QAAM,CAACF,IAAD,EAAOM,OAAP,IAAkBtB,KAAK,CAACuB,QAAN,CAAeF,SAAS,GAAEA,SAAF,GAAY,IAApC,CAAxB;AAEArB,EAAAA,KAAK,CAACwB,SAAN,CAAgB,MAAM;AAClB,UAAMC,MAAM,GAAGpB,SAAS,CAACqB,UAAV,CAAqB,MAArB,CAAf;AACAD,IAAAA,MAAM,CAACE,GAAP,CAAWnB,EAAX,EAAeoB,GAAf,GAAqBC,IAArB,CAA0BF,GAAG,IAAG;AAE5B,UAAIG,KAAK,GAAGH,GAAG,CAACI,IAAJ,EAAZ,CAF4B,CAI5B;;;AACA,UAAIf,IAAI,GAAGgB,MAAM,CAACC,IAAP,CAAYH,KAAZ,EAAmBI,MAAnB,CACT,CAACC,GAAD,EAAMC,GAAN,KAAc;AACZ,YAAIA,GAAG,CAACC,OAAJ,CAAY,OAAZ,MAAyB,CAAC,CAA9B,EAAiC;AAC/B,iBAAO,EACL,GAAGF,GADE;AAELxB,YAAAA,SAAS,EAAE,EAAE,GAAGwB,GAAG,CAACxB,SAAT;AAAoB,eAACyB,GAAD,GAAON,KAAK,CAACM,GAAD;AAAhC;AAFN,WAAP;AAID;;AACD,eAAO,EAAE,GAAGD,GAAL;AAAU,WAACC,GAAD,GAAON,KAAK,CAACM,GAAD;AAAtB,SAAP;AACD,OATQ,EAUT;AAAE5B,QAAAA,EAAE,EAAEmB,GAAG,CAACnB,EAAV;AAAcG,QAAAA,SAAS,EAAE;AAAzB,OAVS,CAAX;AAYAG,MAAAA,SAAS,CAACwB,IAAV,CAAetB,IAAf;AACH,KAlBD;AAmBH,GArBD,EAqBG,EArBH;AAuBA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI,QAAC,IAAD,OAAUA,IAAV;AAAgB,MAAA,KAAK,EAAGA,IAAI,CAACL,SAAL,CAAe4B,OAAf,KAA2B5B,SAAS,CAAC6B;AAA7D;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAzCD;;GAAMlC,U;UAIgBF,W,EACAA,W;;;KALhBE,U;AA2CN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport Post from \"../components/Post\";\nimport CommentList from \"../components/CommentList\"\nimport CommentWrite from \"../components/CommentWrite\"\n\nimport {useSelector} from \"react-redux\"\nimport {firestore} from \"../shared/firebase\"\n\nconst PostDetail = (props) => {\n\n\n    const id = props.match.params.id;\n    const user_info = useSelector((state) => state.user.user);\n    const post_list = useSelector(store => store.post.list);\n    const post_idx = post_list.findIndex( p => p.id === id);\n    const post_data = post_list[post_idx];\n    \n    const [post, setPost] = React.useState(post_data? post_data:null)\n\n    React.useEffect(() => {\n        const postDB = firestore.collection(\"post\");\n        postDB.doc(id).get().then(doc =>{\n           \n            let _post = doc.data()\n         \n            // ['comment_cnt', 'contents',...] 배열로 만들어 줌\n            let post = Object.keys(_post).reduce(\n              (acc, cur) => {\n                if (cur.indexOf(\"user_\") !== -1) {\n                  return {\n                    ...acc,\n                    user_info: { ...acc.user_info, [cur]: _post[cur] },\n                  };\n                }\n                return { ...acc, [cur]: _post[cur] };\n              },\n              { id: doc.id, user_info: {} }\n            );\n            post_list.push(post);\n        })\n    }, []);\n\n    return(\n        <React.Fragment>\n            <Post {...post} is_me ={post.user_info.user_id === user_info.uid} />\n            <CommentWrite/>\n            <CommentList/>\n        </React.Fragment>\n    )\n}\n\nexport default PostDetail;"]},"metadata":{},"sourceType":"module"}