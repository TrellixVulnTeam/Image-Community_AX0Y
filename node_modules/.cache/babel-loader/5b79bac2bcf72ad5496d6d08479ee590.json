{"ast":null,"code":"import { createAction, handleAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cooke\"; //액션타입 3가지\n\nconst LOG_IN = \"LOG_IN\";\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\"; // action creators\n\nconst logIn = createAction(LOG_IN, usser => ({\n  user\n}));\nconst logOut = createAction(LOG_OUT, user => ({\n  user\n}));\nconst getUser = createAction(GET_USER, user => ({\n  user\n})); //initialState\n\nconst initialState = {\n  user: null,\n  is_login: false\n}; //reducer\n\nexport default handleActions({\n  [LOG_IN]: (state, action) => produce(state, draft => {\n    setCookie(\"is_login\", \"success\");\n    draft.user = action.payload.user; //payload를 중간에 거쳐야 한다.\n\n    draft.is_login = true;\n  }),\n  [LOG_OUT]: (state, action) => produce(state, draft => {}),\n  [GET_USER]: (state, action) => produce(state, draft => {})\n}, initialState); // action creator export\n\nconst actionCreators = {\n  logIn,\n  logOut,\n  getUser\n};\nexport { actionCreators };","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/user.js"],"names":["createAction","handleAction","handleActions","produce","setCookie","getCookie","deleteCookie","LOG_IN","LOG_OUT","GET_USER","logIn","usser","user","logOut","getUser","initialState","is_login","state","action","draft","payload","actionCreators"],"mappings":"AAAA,SAASA,YAAT,EAAuBC,YAAvB,EAAqCC,aAArC,QAA0D,eAA1D;AACA,SAASC,OAAT,QAAwB,OAAxB;AAEA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,YAA/B,QAAmD,oBAAnD,C,CAEA;;AACA,MAAMC,MAAM,GAAG,QAAf;AACA,MAAMC,OAAO,GAAG,SAAhB;AACA,MAAMC,QAAQ,GAAG,UAAjB,C,CAEA;;AACA,MAAMC,KAAK,GAAGV,YAAY,CAACO,MAAD,EAAUI,KAAD,KAAY;AAAEC,EAAAA;AAAF,CAAZ,CAAT,CAA1B;AACA,MAAMC,MAAM,GAAGb,YAAY,CAACQ,OAAD,EAAWI,IAAD,KAAW;AAAEA,EAAAA;AAAF,CAAX,CAAV,CAA3B;AACA,MAAME,OAAO,GAAGd,YAAY,CAACS,QAAD,EAAYG,IAAD,KAAW;AAAEA,EAAAA;AAAF,CAAX,CAAX,CAA5B,C,CAEA;;AACA,MAAMG,YAAY,GAAG;AACnBH,EAAAA,IAAI,EAAE,IADa;AAEnBI,EAAAA,QAAQ,EAAE;AAFS,CAArB,C,CAKA;;AAEA,eAAed,aAAa,CAC1B;AACE,GAACK,MAAD,GAAU,CAACU,KAAD,EAAQC,MAAR,KACRf,OAAO,CAACc,KAAD,EAASE,KAAD,IAAW;AACxBf,IAAAA,SAAS,CAAC,UAAD,EAAa,SAAb,CAAT;AACAe,IAAAA,KAAK,CAACP,IAAN,GAAaM,MAAM,CAACE,OAAP,CAAeR,IAA5B,CAFwB,CAEU;;AAClCO,IAAAA,KAAK,CAACH,QAAN,GAAiB,IAAjB;AACD,GAJM,CAFX;AAOE,GAACR,OAAD,GAAW,CAACS,KAAD,EAAQC,MAAR,KAAmBf,OAAO,CAACc,KAAD,EAASE,KAAD,IAAW,CAAE,CAArB,CAPvC;AAQE,GAACV,QAAD,GAAY,CAACQ,KAAD,EAAQC,MAAR,KAAmBf,OAAO,CAACc,KAAD,EAASE,KAAD,IAAW,CAAE,CAArB;AARxC,CAD0B,EAW1BJ,YAX0B,CAA5B,C,CAcA;;AACA,MAAMM,cAAc,GAAG;AACrBX,EAAAA,KADqB;AAErBG,EAAAA,MAFqB;AAGrBC,EAAAA;AAHqB,CAAvB;AAMA,SAASO,cAAT","sourcesContent":["import { createAction, handleAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\n\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cooke\";\n\n//액션타입 3가지\nconst LOG_IN = \"LOG_IN\";\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\n\n// action creators\nconst logIn = createAction(LOG_IN, (usser) => ({ user }));\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\nconst getUser = createAction(GET_USER, (user) => ({ user }));\n\n//initialState\nconst initialState = {\n  user: null,\n  is_login: false,\n};\n\n//reducer\n\nexport default handleActions(\n  {\n    [LOG_IN]: (state, action) =>\n      produce(state, (draft) => {\n        setCookie(\"is_login\", \"success\");\n        draft.user = action.payload.user; //payload를 중간에 거쳐야 한다.\n        draft.is_login = true;\n      }),\n    [LOG_OUT]: (state, action) => produce(state, (draft) => {}),\n    [GET_USER]: (state, action) => produce(state, (draft) => {}),\n  },\n  initialState\n);\n\n// action creator export\nconst actionCreators = {\n  logIn,\n  logOut,\n  getUser,\n};\n\nexport { actionCreators };\n"]},"metadata":{},"sourceType":"module"}