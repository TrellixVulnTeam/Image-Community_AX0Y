{"ast":null,"code":"import { createAction, handleAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\nimport { auth } from \"../../shared/firebase\";\nimport firebase from \"firebase/app\"; //액션타입 3가지\n\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\"; // action creators\n\nconst logOut = createAction(LOG_OUT, user => ({\n  user\n}));\nconst getUser = createAction(GET_USER, user => ({\n  user\n}));\nconst setUser = createAction(SET_USER, user => ({\n  user\n})); //initialState\n\nconst initialState = {\n  user: null,\n  is_login: false\n};\nconst user_initial = {\n  user_name: 'pear111'\n}; //middleware actions\n\nconst loginFB = (id, pwd) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    auth.setPersistence(firebase.auth.Auth.Persistence.SESSION).then(res => {\n      auth.signInWithEmailAndPassword(id, pwd).then(user => {\n        console.log(user);\n        dispatch(setUser({\n          user_name: user.user.displayName,\n          id: id,\n          user_profile: ''\n        }));\n        history.push('/'); // Signed in\n        // ...\n      }).catch(error => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n        console.log(errorCode, errorMessage);\n      });\n    });\n    auth.signInWithEmailAndPassword(id, pwd).then(user => {\n      console.log(user);\n      dispatch(setUser({\n        user_name: user.user.displayName,\n        id: id,\n        user_profile: ''\n      }));\n      history.push('/'); // Signed in\n      // ...\n    }).catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n    });\n  };\n};\n\nconst signupFB = (id, pwd, user_name) => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    auth.createUserWithEmailAndPassword(id, pwd).then(user => {\n      console.log(user);\n      auth.currentUser.updateProfile({\n        displayName: user_name\n      }).then(() => {\n        dispatch(setUser({\n          user_name: user_name,\n          id: id,\n          user_profile: ''\n        }));\n        history.push('/');\n      }).catch(error => {\n        console.log(error);\n      }); // Signed in\n      // ...\n    }).catch(error => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      console.log(errorCode, errorMessage); // ..\n    });\n  };\n}; //reducer\n\n\nexport default handleActions({\n  [SET_USER]: (state, action) => produce(state, draft => {\n    setCookie(\"is_login\", \"success\");\n    draft.user = action.payload.user; //payload를 중간에 거쳐야 한다.\n\n    draft.is_login = true;\n  }),\n  [LOG_OUT]: (state, action) => produce(state, draft => {\n    deleteCookie(\"is_login\");\n    draft.user = null;\n    draft.is_login = false;\n  }),\n  [GET_USER]: (state, action) => produce(state, draft => {})\n}, initialState); // action creator export\n\nconst actionCreators = {\n  logOut,\n  getUser,\n  signupFB,\n  loginFB\n};\nexport { actionCreators };","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/user.js"],"names":["createAction","handleAction","handleActions","produce","setCookie","getCookie","deleteCookie","auth","firebase","LOG_OUT","GET_USER","SET_USER","logOut","user","getUser","setUser","initialState","is_login","user_initial","user_name","loginFB","id","pwd","dispatch","getState","history","setPersistence","Auth","Persistence","SESSION","then","res","signInWithEmailAndPassword","console","log","displayName","user_profile","push","catch","error","errorCode","code","errorMessage","message","signupFB","createUserWithEmailAndPassword","currentUser","updateProfile","state","action","draft","payload","actionCreators"],"mappings":"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","sourcesContent":["import { createAction, handleAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\n\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\nimport {auth} from \"../../shared/firebase\";\nimport firebase from \"firebase/app\";\n\n\n\n//액션타입 3가지\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\";\n\n// action creators\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\nconst getUser = createAction(GET_USER, (user) => ({ user }));\nconst setUser = createAction(SET_USER, (user) => ({ user }));\n\n\n\n//initialState\nconst initialState = {\n  user: null,\n  is_login: false,\n};\n\nconst user_initial = {\n  user_name:'pear111'\n}\n\n\n//middleware actions\nconst loginFB =(id, pwd) => {\n  return function (dispatch, getState, {history}){\n\n    auth.setPersistence(firebase.auth.Auth.Persistence.SESSION).then((res) =>{\n\n      auth\n      .signInWithEmailAndPassword(id, pwd)\n    .then((user) => {\n      console.log(user);\n    \n      dispatch(\n        setUser({\n        user_name: user.user.displayName,\n        id: id, \n        user_profile: '',\n      })\n      );\n      history.push('/');\n  \n      // Signed in\n      // ...\n    })\n    .catch((error) => {\n      var errorCode = error.code;\n      var errorMessage = error.message;\n\n      console.log(errorCode, errorMessage);\n    });\n\n    });\n\n\n\n    auth\n    .signInWithEmailAndPassword(id, pwd)\n  .then((user) => {\n    console.log(user);\n  \n    dispatch(\n      setUser({\n      user_name: user.user.displayName,\n      id: id, \n      user_profile: '',\n    })\n    );\n    history.push('/');\n\n    // Signed in\n    // ...\n  })\n  .catch((error) => {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n  });\n\n\n\n\n  }\n\n}\n\n\n\nconst signupFB =(id, pwd, user_name) =>{\n  return function (dispatch, getState, {history}){\n\n  auth\n  .createUserWithEmailAndPassword(id, pwd)\n  .then((user) => {\n\n    console.log(user);\n\n    auth.currentUser.updateProfile({\n      displayName: user_name,\n    }).then(() => {\n      dispatch(setUser({user_name: user_name, id: id, user_profile: ''}));\n      history.push('/');\n    }).catch((error) =>{\n      console.log(error);\n    })\n    // Signed in\n    // ...\n  })\n  .catch((error) => {\n    var errorCode = error.code;\n    var errorMessage = error.message;\n\n    console.log(errorCode, errorMessage)\n    // ..\n  });\n\n\n  }\n}\n\n\n\n//reducer\n\nexport default handleActions(\n  {\n    [SET_USER]: (state, action) =>\n      produce(state, (draft) => {\n        setCookie(\"is_login\", \"success\");\n        draft.user = action.payload.user; //payload를 중간에 거쳐야 한다.\n        draft.is_login = true;\n      }),\n    [LOG_OUT]: (state, action) => produce(state, (draft) => {\n      deleteCookie(\"is_login\");\n      draft.user =null;\n      draft.is_login = false;\n\n\n    }),\n      \n    [GET_USER]: (state, action) => produce(state, (draft) => {}),\n  },\n  initialState\n);\n\n// action creator export\nconst actionCreators = {\n  logOut,\n  getUser,\n  signupFB,\n  loginFB\n};\n\nexport { actionCreators };\n"]},"metadata":{},"sourceType":"module"}