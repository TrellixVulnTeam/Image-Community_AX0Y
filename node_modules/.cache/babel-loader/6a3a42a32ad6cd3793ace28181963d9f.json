{"ast":null,"code":"import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nconst SET_POST = \"SET_POST\";\nconst ADD_POST = \"ADD_POST\";\nconst setPost = createAction(SET_POST, post_list => ({\n  post_list\n}));\nconst addPost = createAction(ADD_POST, post => ({\n  post\n}));\nconst initialState = {\n  list: []\n};\nconst initialPost = {\n  id: 0,\n  user_info: {\n    user_name: \"joy\",\n    user_profile: \"ttps://www.vmcdn.ca/f/files/piquenewsmagazine/import/2015-33_news_mtnnews2-1-cd1c0a5e13e77f75.jpg;w=640\"\n  },\n  image_url: \"ttps://www.vmcdn.ca/f/files/piquenewsmagazine/import/2015-33_news_mtnnews2-1-cd1c0a5e13e77f75.jpg;w=640\",\n  contents: \"Love Lake Luise\",\n  comment_cnt: 22,\n  insert_dt: \"2021-03-28 10:00:00\"\n};\n\nconst getPostFB = () => {\n  return function (dispatch, getState, {\n    history\n  }) {\n    const postDB = firestore.collection(\"post\");\n    postDB.get().then(docs => {\n      let post_list = [];\n      docs.forEach(doc => {\n        // 잘 가져왔나 확인하기! :)\n        // 앗! DB에서 가져온 것하고 우리가 Post 컴포넌트에서 쓰는 데이터 모양새가 다르네요!\n        // console.log(doc.id, doc.data());\n        // 데이터 모양을 맞춰주자!\n        let _post = doc.data();\n\n        let post = {\n          id: doc.id,\n          user_info: {\n            user_name: _post.user_name,\n            user_profile: _post.user_profile,\n            user_id: _post.user_id\n          },\n          contents: _post.contents,\n          image_url: _post.image_url,\n          comment_cnt: _post.comment_cnt,\n          imsert_dt: _post.insert_dt\n        };\n        post_list.push(post);\n      }); // 리스트 확인하기!\n\n      console.log(post_list);\n      dispatch(setPost(post_list));\n    });\n  };\n}; //리듀서 \n\n\nexport default handleActions({\n  [SET_POST]: (state, action) => produce(state, draft => {}),\n  [ADD_POST]: (state, action) => produce(state, draft => {})\n}, initialState);\nconst actionCreators = {\n  setPost,\n  addPost\n};\nexport { actionCreators };","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/post.js"],"names":["createAction","handleActions","produce","SET_POST","ADD_POST","setPost","post_list","addPost","post","initialState","list","initialPost","id","user_info","user_name","user_profile","image_url","contents","comment_cnt","insert_dt","getPostFB","dispatch","getState","history","postDB","firestore","collection","get","then","docs","forEach","doc","_post","data","user_id","imsert_dt","push","console","log","state","action","draft","actionCreators"],"mappings":"AAAA,SAAQA,YAAR,EAAsBC,aAAtB,QAA0C,eAA1C;AACA,SAAQC,OAAR,QAAsB,OAAtB;AAEA,MAAMC,QAAQ,GAAG,UAAjB;AACA,MAAMC,QAAQ,GAAG,UAAjB;AAGA,MAAMC,OAAO,GAAGL,YAAY,CAACG,QAAD,EAAYG,SAAD,KAAc;AAACA,EAAAA;AAAD,CAAd,CAAX,CAA5B;AACA,MAAMC,OAAO,GAAGP,YAAY,CAACI,QAAD,EAAYI,IAAD,KAAW;AAACA,EAAAA;AAAD,CAAX,CAAX,CAA5B;AAGA,MAAMC,YAAY,GAAE;AAChBC,EAAAA,IAAI,EAAE;AADU,CAApB;AAIA,MAAMC,WAAW,GAAE;AACfC,EAAAA,EAAE,EAAC,CADY;AAEfC,EAAAA,SAAS,EAAE;AACPC,IAAAA,SAAS,EAAE,KADJ;AAEPC,IAAAA,YAAY,EACV;AAHK,GAFI;AAObC,EAAAA,SAAS,EACP,yGARW;AASbC,EAAAA,QAAQ,EAAE,iBATG;AAUbC,EAAAA,WAAW,EAAE,EAVA;AAWbC,EAAAA,SAAS,EAAE;AAXE,CAAnB;;AAeA,MAAMC,SAAS,GAAG,MAAM;AACpB,SAAO,UAAUC,QAAV,EAAoBC,QAApB,EAA8B;AAAEC,IAAAA;AAAF,GAA9B,EAA2C;AAChD,UAAMC,MAAM,GAAGC,SAAS,CAACC,UAAV,CAAqB,MAArB,CAAf;AAEAF,IAAAA,MAAM,CAACG,GAAP,GAAaC,IAAb,CAAmBC,IAAD,IAAU;AAC1B,UAAIvB,SAAS,GAAG,EAAhB;AAEAuB,MAAAA,IAAI,CAACC,OAAL,CAAcC,GAAD,IAAS;AACpB;AACA;AACA;AAEA;AACA,YAAIC,KAAK,GAAGD,GAAG,CAACE,IAAJ,EAAZ;;AACA,YAAIzB,IAAI,GAAG;AACPI,UAAAA,EAAE,EAAEmB,GAAG,CAACnB,EADD;AAEPC,UAAAA,SAAS,EAAE;AACPC,YAAAA,SAAS,EAAEkB,KAAK,CAAClB,SADV;AAEPC,YAAAA,YAAY,EAAEiB,KAAK,CAACjB,YAFb;AAGPmB,YAAAA,OAAO,EAAEF,KAAK,CAACE;AAHR,WAFJ;AAOPjB,UAAAA,QAAQ,EAAEe,KAAK,CAACf,QAPT;AAQPD,UAAAA,SAAS,EAAEgB,KAAK,CAAChB,SARV;AASPE,UAAAA,WAAW,EAAEc,KAAK,CAACd,WATZ;AAUPiB,UAAAA,SAAS,EAAEH,KAAK,CAACb;AAVV,SAAX;AAaAb,QAAAA,SAAS,CAAC8B,IAAV,CAAe5B,IAAf;AACD,OArBD,EAH0B,CA0B1B;;AACA6B,MAAAA,OAAO,CAACC,GAAR,CAAYhC,SAAZ;AAEAe,MAAAA,QAAQ,CAAChB,OAAO,CAACC,SAAD,CAAR,CAAR;AACD,KA9BD;AA+BD,GAlCD;AAmCD,CApCH,C,CAuCA;;;AACA,eAAeL,aAAa,CACxB;AACI,GAACE,QAAD,GAAY,CAACoC,KAAD,EAAQC,MAAR,KAAmBtC,OAAO,CAACqC,KAAD,EAASE,KAAD,IAAU,CAEvD,CAFqC,CAD1C;AAII,GAACrC,QAAD,GAAY,CAACmC,KAAD,EAAQC,MAAR,KAAmBtC,OAAO,CAACqC,KAAD,EAASE,KAAD,IAAU,CAEvD,CAFqC;AAJ1C,CADwB,EAQrBhC,YARqB,CAA5B;AAWA,MAAMiC,cAAc,GAAE;AAClBrC,EAAAA,OADkB;AAElBE,EAAAA;AAFkB,CAAtB;AAMA,SAAQmC,cAAR","sourcesContent":["import {createAction, handleActions} from \"redux-actions\";\nimport {produce} from \"immer\"\n\nconst SET_POST = \"SET_POST\";\nconst ADD_POST = \"ADD_POST\";\n\n\nconst setPost = createAction(SET_POST, (post_list)=>({post_list}));\nconst addPost = createAction(ADD_POST, (post) => ({post}));\n\n\nconst initialState ={\n    list: [], \n}\n\nconst initialPost ={\n    id:0,\n    user_info: {\n        user_name: \"joy\",\n        user_profile:\n          \"ttps://www.vmcdn.ca/f/files/piquenewsmagazine/import/2015-33_news_mtnnews2-1-cd1c0a5e13e77f75.jpg;w=640\",\n      },\n      image_url:\n        \"ttps://www.vmcdn.ca/f/files/piquenewsmagazine/import/2015-33_news_mtnnews2-1-cd1c0a5e13e77f75.jpg;w=640\",\n      contents: \"Love Lake Luise\",\n      comment_cnt: 22,\n      insert_dt: \"2021-03-28 10:00:00\",\n};\n\n\nconst getPostFB = () => {\n    return function (dispatch, getState, { history }) {\n      const postDB = firestore.collection(\"post\");\n  \n      postDB.get().then((docs) => {\n        let post_list = [];\n  \n        docs.forEach((doc) => {\n          // 잘 가져왔나 확인하기! :)\n          // 앗! DB에서 가져온 것하고 우리가 Post 컴포넌트에서 쓰는 데이터 모양새가 다르네요!\n          // console.log(doc.id, doc.data());\n  \n          // 데이터 모양을 맞춰주자!\n          let _post = doc.data();\n          let post = {\n              id: doc.id,\n              user_info: {\n                  user_name: _post.user_name,\n                  user_profile: _post.user_profile,\n                  user_id: _post.user_id,\n              },\n              contents: _post.contents,\n              image_url: _post.image_url,\n              comment_cnt: _post.comment_cnt,\n              imsert_dt: _post.insert_dt\n          }\n  \n          post_list.push(post);\n        });\n  \n        // 리스트 확인하기!\n        console.log(post_list);\n  \n        dispatch(setPost(post_list));\n      });\n    };\n  };\n\n\n//리듀서 \nexport default handleActions(\n    {\n        [SET_POST]: (state, action) => produce(state, (draft) =>{\n\n        }),\n        [ADD_POST]: (state, action) => produce(state, (draft)=> {\n\n        })\n    }, initialState\n);\n\nconst actionCreators ={\n    setPost,\n    addPost,\n\n}\n\nexport {actionCreators};\n"]},"metadata":{},"sourceType":"module"}