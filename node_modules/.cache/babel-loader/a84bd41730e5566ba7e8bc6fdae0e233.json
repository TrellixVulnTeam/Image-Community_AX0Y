{"ast":null,"code":"var _jsxFileName = \"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostDetail.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Post from \"../components/Post\";\nimport CommentList from \"../components/CommentList\";\nimport CommentWrite from \"../components/CommentWrite\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostDetail = props => {\n  _s();\n\n  const id = props.match.params.id;\n  const user_info = useSelector(state => state.user.user);\n  const post_list = useSelector(store => store.post.list);\n  const post_idx = post_list.findIndex(p => p.id === id);\n  const post_data = post_list[post_idx];\n  const [post, setPost] = React.useState(post_data ? post_data : null);\n  React.useEffect(() => {\n    if (post) {\n      return;\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [post && /*#__PURE__*/_jsxDEV(Post, { ...post,\n      is_me: post.user_info.user_id === user_info.uid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 22\n    }, this), \"  //\\uD3EC\\uC2A4\\uD2B8\\uAC00 \\uC788\\uC744\\uB54C\\uC5D0\\uB9CC\", /*#__PURE__*/_jsxDEV(CommentWrite, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CommentList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n_s(PostDetail, \"MZIiRZlxl8RMdu5PeUe2rxtVCII=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = PostDetail;\nexport default PostDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostDetail.js"],"names":["React","Post","CommentList","CommentWrite","useDispatch","useSelector","actionCreators","postActions","PostDetail","props","id","match","params","user_info","state","user","post_list","store","post","list","post_idx","findIndex","p","post_data","setPost","useState","useEffect","user_id","uid"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AAEA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,cAAc,IAAIC,WAA1B,QAA4C,uBAA5C;;;AAIA,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAAA;;AAG1B,QAAMC,EAAE,GAAGD,KAAK,CAACE,KAAN,CAAYC,MAAZ,CAAmBF,EAA9B;AACA,QAAMG,SAAS,GAAGR,WAAW,CAAES,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWA,IAAvB,CAA7B;AACA,QAAMC,SAAS,GAAGX,WAAW,CAACY,KAAK,IAAIA,KAAK,CAACC,IAAN,CAAWC,IAArB,CAA7B;AACA,QAAMC,QAAQ,GAAGJ,SAAS,CAACK,SAAV,CAAqBC,CAAC,IAAIA,CAAC,CAACZ,EAAF,KAASA,EAAnC,CAAjB;AACA,QAAMa,SAAS,GAAGP,SAAS,CAACI,QAAD,CAA3B;AAEA,QAAM,CAACF,IAAD,EAAOM,OAAP,IAAkBxB,KAAK,CAACyB,QAAN,CAAeF,SAAS,GAAEA,SAAF,GAAY,IAApC,CAAxB;AAEAvB,EAAAA,KAAK,CAAC0B,SAAN,CAAgB,MAAM;AAClB,QAAGR,IAAH,EAAS;AACL;AACH;AAGJ,GAND,EAMG,EANH;AAQA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,eACKA,IAAI,iBAAI,QAAC,IAAD,OAAUA,IAAV;AAAgB,MAAA,KAAK,EAAGA,IAAI,CAACL,SAAL,CAAec,OAAf,KAA2Bd,SAAS,CAACe;AAA7D;AAAA;AAAA;AAAA;AAAA,YADb,8EAEI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA1BD;;GAAMpB,U;UAIgBH,W,EACAA,W;;;KALhBG,U;AA4BN,eAAeA,UAAf","sourcesContent":["import React from \"react\";\nimport Post from \"../components/Post\";\nimport CommentList from \"../components/CommentList\"\nimport CommentWrite from \"../components/CommentWrite\"\n\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {actionCreators as postActions} from \"../redux/modules/post\"\n\n\n\nconst PostDetail = (props) => {\n\n\n    const id = props.match.params.id;\n    const user_info = useSelector((state) => state.user.user);\n    const post_list = useSelector(store => store.post.list);\n    const post_idx = post_list.findIndex( p => p.id === id);\n    const post_data = post_list[post_idx];\n    \n    const [post, setPost] = React.useState(post_data? post_data:null)\n\n    React.useEffect(() => {\n        if(post) {\n            return;\n        }\n\n\n    }, []);\n\n    return(\n        <React.Fragment>\n            {post && <Post {...post} is_me ={post.user_info.user_id === user_info.uid} /> }  //포스트가 있을때에만 \n            <CommentWrite/>\n            <CommentList/>\n        </React.Fragment>\n    )\n}\n\nexport default PostDetail;"]},"metadata":{},"sourceType":"module"}