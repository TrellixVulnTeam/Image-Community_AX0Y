{"ast":null,"code":"var _jsxFileName = \"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Post from \"../components/Post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport InfinityScroll from \"../shared/InfinityScroll\";\nimport { Grid } from \"../elements/index\";\nimport { history } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const post_list = useSelector(state => state.post.list);\n  const user_info = useSelector(state => state.user.user);\n  const is_loading = useSelector(state => state.post.is_loading);\n  const paging = useSelector(state => state.post.paging);\n  React.useEffect(() => {\n    if (post_list.length === 0) {\n      dispatch(postActions.getPostFB());\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(InfinityScroll, {\n      callNext: () => {\n        dispatch(postActions.getPostFB(paging.next));\n      },\n      is_next: paging.next ? true : false,\n      loading: true,\n      children: post_list.map((p, idx) => {\n        if (p.user_info.user_id === (user_info === null || user_info === void 0 ? void 0 : user_info.uid)) {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            _onClick: () => {\n              history.pushState(`/post/${p.id}`);\n            },\n            children: /*#__PURE__*/_jsxDEV(Post, { ...p,\n              is_me: true\n            }, p.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Post, { ...p\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 20\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostList, \"Z1NBbvDwQ3UlvEK5/PNDqnmDgb0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostList.js"],"names":["React","Post","useSelector","useDispatch","actionCreators","postActions","InfinityScroll","Grid","history","PostList","props","dispatch","post_list","state","post","list","user_info","user","is_loading","paging","useEffect","length","getPostFB","next","map","p","idx","user_id","uid","pushState","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAc,IAAIC,WAA3B,QAA8C,uBAA9C;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAAQC,IAAR,QAAmB,mBAAnB;AACA,SAAQC,OAAR,QAAsB,aAAtB;;;AAGA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,QAAMS,SAAS,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,IAAvB,CAA7B;AACA,QAAMC,SAAS,GAAGd,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACI,IAAN,CAAWA,IAAvB,CAA7B;AACA,QAAMC,UAAU,GAAGhB,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWI,UAAvB,CAA9B;AACA,QAAMC,MAAM,GAAGjB,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWK,MAAvB,CAA1B;AAEAnB,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,QAAIR,SAAS,CAACS,MAAV,KAAqB,CAAzB,EAA4B;AAC1BV,MAAAA,QAAQ,CAACN,WAAW,CAACiB,SAAZ,EAAD,CAAR;AACD;AACF,GAJD,EAIG,EAJH;AAMA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,cAAD;AACA,MAAA,QAAQ,EAAK,MAAK;AACdX,QAAAA,QAAQ,CAACN,WAAW,CAACiB,SAAZ,CAAsBH,MAAM,CAACI,IAA7B,CAAD,CAAR;AACL,OAHC;AAKF,MAAA,OAAO,EAAGJ,MAAM,CAACI,IAAP,GAAa,IAAb,GAAmB,KAL3B;AAMF,MAAA,OAAO,EAAE,IANP;AAAA,gBAUGX,SAAS,CAACY,GAAV,CAAc,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACzB,YAAID,CAAC,CAACT,SAAF,CAAYW,OAAZ,MAAwBX,SAAxB,aAAwBA,SAAxB,uBAAwBA,SAAS,CAAEY,GAAnC,CAAJ,EAA4C;AAC1C,8BACI,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAG,MAAK;AAACpB,cAAAA,OAAO,CAACqB,SAAR,CAAmB,SAAQJ,CAAC,CAACK,EAAG,EAAhC;AAAmC,aAA1D;AAAA,mCACI,QAAC,IAAD,OAAqBL,CAArB;AAAwB,cAAA,KAAK;AAA7B,eAAWA,CAAC,CAACK,EAAb;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ;AAKD,SAND,MAMO;AACL,8BAAO,QAAC,IAAD,OAAqBL;AAArB,aAAWA,CAAC,CAACK,EAAb;AAAA;AAAA;AAAA;AAAA,kBAAP;AACD;AACF,OAVA;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA2BD,CAxCD;;GAAMrB,Q;UACaN,W,EACCD,W,EACAA,W,EACCA,W,EACJA,W;;;KALXO,Q;AA0CN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport Post from \"../components/Post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport InfinityScroll from \"../shared/InfinityScroll\";\nimport {Grid} from \"../elements/index\"\nimport {history} from \"react-redux\"\n\n\nconst PostList = (props) => {\n  const dispatch = useDispatch();\n  const post_list = useSelector((state) => state.post.list);\n  const user_info = useSelector((state) => state.user.user);\n  const is_loading = useSelector((state) => state.post.is_loading);\n  const paging = useSelector((state) => state.post.paging);\n\n  React.useEffect(() => {\n    if (post_list.length === 0) {\n      dispatch(postActions.getPostFB());\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <InfinityScroll\n      callNext = { () =>{\n          dispatch(postActions.getPostFB(paging.next))      \n    }}\n\n    is_next ={paging.next? true: false}\n    loading={true}\n      >\n        \n\n        {post_list.map((p, idx) => {\n          if (p.user_info.user_id === user_info?.uid) {\n            return (\n                <Grid _onClick ={() =>{history.pushState(`/post/${p.id}`)}}>\n                    <Post key={p.id} {...p} is_me />\n                </Grid>\n            );\n          } else {\n            return <Post key={p.id} {...p} />;\n          }\n        })}\n      </InfinityScroll>\n\n    </React.Fragment>\n  );\n};\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}