{"ast":null,"code":"var _jsxFileName = \"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostList.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Post from \"../components/Post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport InfinityScroll from \"../shared/InfinityScroll\";\nimport { Grid } from \"../elements/index\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostList = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const post_list = useSelector(state => state.post.list);\n  const user_info = useSelector(state => state.user.user);\n  const is_loading = useSelector(state => state.post.is_loading);\n  const paging = useSelector(state => state.post.paging);\n  const {\n    history\n  } = props;\n  React.useEffect(() => {\n    if (post_list.length === 0) {\n      dispatch(postActions.getPostFB());\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: /*#__PURE__*/_jsxDEV(InfinityScroll, {\n      callNext: () => {\n        dispatch(postActions.getPostFB(paging.next));\n      },\n      is_next: paging.next ? true : false,\n      loading: true,\n      children: post_list.map((p, idx) => {\n        if (p.user_info.user_id === (user_info === null || user_info === void 0 ? void 0 : user_info.uid)) {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            bg: \"#ffffff\",\n            margin: \"8px 0px\",\n            _onClick: () => {\n              history.push(`/post/${p.id}`);\n            },\n            children: /*#__PURE__*/_jsxDEV(Post, { ...p,\n              is_me: true\n            }, p.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 17\n          }, this);\n        } else {\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            bg: \"#ffffff\",\n            _onClick: () => {\n              history.push(`/post/${p.id}`);\n            },\n            children: /*#__PURE__*/_jsxDEV(Post, { ...p\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 21\n            }, this)\n          }, p.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 17\n          }, this);\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostList, \"Z1NBbvDwQ3UlvEK5/PNDqnmDgb0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = PostList;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostList.js"],"names":["React","Post","useSelector","useDispatch","actionCreators","postActions","InfinityScroll","Grid","PostList","props","dispatch","post_list","state","post","list","user_info","user","is_loading","paging","history","useEffect","length","getPostFB","next","map","p","idx","user_id","uid","push","id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAc,IAAIC,WAA3B,QAA8C,uBAA9C;AACA,OAAOC,cAAP,MAA2B,0BAA3B;AACA,SAAQC,IAAR,QAAmB,mBAAnB;;;AAIA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAC1B,QAAMC,QAAQ,GAAGP,WAAW,EAA5B;AACA,QAAMQ,SAAS,GAAGT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,IAAvB,CAA7B;AACA,QAAMC,SAAS,GAAGb,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACI,IAAN,CAAWA,IAAvB,CAA7B;AACA,QAAMC,UAAU,GAAGf,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWI,UAAvB,CAA9B;AACA,QAAMC,MAAM,GAAGhB,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWK,MAAvB,CAA1B;AAGA,QAAK;AAACC,IAAAA;AAAD,MAAYV,KAAjB;AAEAT,EAAAA,KAAK,CAACoB,SAAN,CAAgB,MAAM;AACpB,QAAIT,SAAS,CAACU,MAAV,KAAqB,CAAzB,EAA4B;AAC1BX,MAAAA,QAAQ,CAACL,WAAW,CAACiB,SAAZ,EAAD,CAAR;AACD;AACF,GAJD,EAIG,EAJH;AAMA,sBACE,QAAC,KAAD,CAAO,QAAP;AAAA,2BACE,QAAC,cAAD;AACA,MAAA,QAAQ,EAAK,MAAK;AACdZ,QAAAA,QAAQ,CAACL,WAAW,CAACiB,SAAZ,CAAsBJ,MAAM,CAACK,IAA7B,CAAD,CAAR;AACL,OAHC;AAKF,MAAA,OAAO,EAAGL,MAAM,CAACK,IAAP,GAAa,IAAb,GAAmB,KAL3B;AAMF,MAAA,OAAO,EAAE,IANP;AAAA,gBAUGZ,SAAS,CAACa,GAAV,CAAc,CAACC,CAAD,EAAIC,GAAJ,KAAY;AACzB,YAAID,CAAC,CAACV,SAAF,CAAYY,OAAZ,MAAwBZ,SAAxB,aAAwBA,SAAxB,uBAAwBA,SAAS,CAAEa,GAAnC,CAAJ,EAA4C;AAC1C,8BACI,QAAC,IAAD;AACA,YAAA,EAAE,EAAC,SADH;AAEA,YAAA,MAAM,EAAC,SAFP;AAIA,YAAA,QAAQ,EAAE,MAAM;AACdT,cAAAA,OAAO,CAACU,IAAR,CAAc,SAAQJ,CAAC,CAACK,EAAG,EAA3B;AACD,aAND;AAAA,mCAQA,QAAC,IAAD,OAAqBL,CAArB;AAAwB,cAAA,KAAK;AAA7B,eAAWA,CAAC,CAACK,EAAb;AAAA;AAAA;AAAA;AAAA;AARA,aAGKL,CAAC,CAACK,EAHP;AAAA;AAAA;AAAA;AAAA,kBADJ;AAYD,SAbD,MAaO;AACL,8BACI,QAAC,IAAD;AAEI,YAAA,EAAE,EAAC,SAFP;AAGI,YAAA,QAAQ,EAAE,MAAM;AACdX,cAAAA,OAAO,CAACU,IAAR,CAAc,SAAQJ,CAAC,CAACK,EAAG,EAA3B;AACD,aALL;AAAA,mCAOI,QAAC,IAAD,OAAUL;AAAV;AAAA;AAAA;AAAA;AAAA;AAPJ,aACHA,CAAC,CAACK,EADC;AAAA;AAAA;AAAA;AAAA,kBADJ;AAWD;AACF,OA3BA;AAVH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA4CD,CA5DD;;GAAMtB,Q;UACaL,W,EACCD,W,EACAA,W,EACCA,W,EACJA,W;;;KALXM,Q;AA8DN,eAAeA,QAAf","sourcesContent":["import React from \"react\";\nimport Post from \"../components/Post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport InfinityScroll from \"../shared/InfinityScroll\";\nimport {Grid} from \"../elements/index\"\n\n\n\nconst PostList = (props) => {\n  const dispatch = useDispatch();\n  const post_list = useSelector((state) => state.post.list);\n  const user_info = useSelector((state) => state.user.user);\n  const is_loading = useSelector((state) => state.post.is_loading);\n  const paging = useSelector((state) => state.post.paging);\n\n\n  const{history} = props;\n\n  React.useEffect(() => {\n    if (post_list.length === 0) {\n      dispatch(postActions.getPostFB());\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n      <InfinityScroll\n      callNext = { () =>{\n          dispatch(postActions.getPostFB(paging.next))      \n    }}\n\n    is_next ={paging.next? true: false}\n    loading={true}\n      >\n        \n\n        {post_list.map((p, idx) => {\n          if (p.user_info.user_id === user_info?.uid) {\n            return (\n                <Grid\n                bg=\"#ffffff\"\n                margin=\"8px 0px\"\n                key={p.id}\n                _onClick={() => {\n                  history.push(`/post/${p.id}`);\n                }}\n              >\n                <Post key={p.id} {...p} is_me />\n              </Grid>\n            );\n          } else {\n            return (\n                <Grid\n\t\t\t\t    key={p.id}\n                    bg=\"#ffffff\"\n                    _onClick={() => {\n                      history.push(`/post/${p.id}`);\n                    }}\n                  >\n                    <Post {...p} />\n                  </Grid>\n            );\n          }\n        })}\n      </InfinityScroll>\n\n    </React.Fragment>\n  );\n};\n\nexport default PostList;\n"]},"metadata":{},"sourceType":"module"}