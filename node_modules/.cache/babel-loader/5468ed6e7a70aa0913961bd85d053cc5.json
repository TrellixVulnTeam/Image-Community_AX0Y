{"ast":null,"code":"var _jsxFileName = \"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/Upload.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { storage } from \"./firebase\";\nimport { Button } from \"../elements\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\"; // import 해와야함\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Upload = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const is_uploading = useSelector(state => state.image.uploading);\n  const fileInput = React.useRef();\n\n  const selectFile = e => {\n    console.log(e);\n    console.log(e.target);\n    console.log(e.target.files[0]);\n    console.log(fileInput.current.files[0]);\n    const reader = new FileReader();\n    const file = fileInput.current.files[0];\n    reader.readAsDataURL(file);\n\n    reader.onloadend = () => {\n      console.log(reader.result);\n      dispatch(imageActions.setPreview(reader.result));\n    };\n  };\n\n  const uploadFB = () => {\n    let image = fileInput.current.files[0];\n\n    const _upload = storage.ref(`images/${image.name}`).put(image);\n\n    _upload.then(snapshot => {\n      console.log(snapshot);\n      snapshot.ref.getDownloadURL().then(url => {\n        console.log(url);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: selectFile,\n      ref: fileInput,\n      disabled: is_uploading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      _onClick: uploadFB,\n      children: \"\\uC5C5\\uB85C\\uB4DC\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Upload, \"fqShzcroMxqgZOYDQq0wvmqh0V8=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = Upload;\nexport default Upload;\n\nvar _c;\n\n$RefreshReg$(_c, \"Upload\");","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/Upload.js"],"names":["React","storage","Button","useDispatch","useSelector","actionCreators","imageActions","Upload","props","dispatch","is_uploading","state","image","uploading","fileInput","useRef","selectFile","e","console","log","target","files","current","reader","FileReader","file","readAsDataURL","onloadend","result","setPreview","uploadFB","_upload","ref","name","put","then","snapshot","getDownloadURL","url"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,OAAR,QAAsB,YAAtB;AACA,SAAQC,MAAR,QAAqB,aAArB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,aAAvC;AACA,SAAQC,cAAc,IAAIC,YAA1B,QAA6C,wBAA7C,C,CAAuE;;;;AAIvE,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACtB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,YAAY,GAAGN,WAAW,CAACO,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,SAAtB,CAAhC;AAEA,QAAMC,SAAS,GAAGd,KAAK,CAACe,MAAN,EAAlB;;AAEA,QAAMC,UAAU,GAAIC,CAAD,IAAO;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAd;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAC,CAACG,MAAF,CAASC,KAAT,CAAe,CAAf,CAAZ;AAGAH,IAAAA,OAAO,CAACC,GAAR,CAAYL,SAAS,CAACQ,OAAV,CAAkBD,KAAlB,CAAwB,CAAxB,CAAZ;AAEA,UAAME,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACA,UAAMC,IAAI,GAAGX,SAAS,CAACQ,OAAV,CAAkBD,KAAlB,CAAwB,CAAxB,CAAb;AAEAE,IAAAA,MAAM,CAACG,aAAP,CAAqBD,IAArB;;AACAF,IAAAA,MAAM,CAACI,SAAP,GAAkB,MAAM;AACpBT,MAAAA,OAAO,CAACC,GAAR,CAAYI,MAAM,CAACK,MAAnB;AACAnB,MAAAA,QAAQ,CAACH,YAAY,CAACuB,UAAb,CAAwBN,MAAM,CAACK,MAA/B,CAAD,CAAR;AAGH,KALD;AAMH,GAlBD;;AAoBA,QAAME,QAAQ,GAAE,MAAM;AAClB,QAAIlB,KAAK,GAAGE,SAAS,CAACQ,OAAV,CAAkBD,KAAlB,CAAwB,CAAxB,CAAZ;;AACA,UAAMU,OAAO,GAAG9B,OAAO,CAAC+B,GAAR,CAAa,UAASpB,KAAK,CAACqB,IAAK,EAAjC,EAAoCC,GAApC,CAAwCtB,KAAxC,CAAhB;;AAEAmB,IAAAA,OAAO,CAACI,IAAR,CAAcC,QAAD,IAAc;AACvBlB,MAAAA,OAAO,CAACC,GAAR,CAAYiB,QAAZ;AAGAA,MAAAA,QAAQ,CAACJ,GAAT,CAAaK,cAAb,GAA8BF,IAA9B,CAAoCG,GAAD,IAAO;AACtCpB,QAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACH,OAFD;AAGH,KAPD;AAQH,GAZD;;AAeA,sBACI,QAAC,KAAD,CAAO,QAAP;AAAA,4BACI;AAAO,MAAA,IAAI,EAAE,MAAb;AAAoB,MAAA,QAAQ,EAAItB,UAAhC;AAA4C,MAAA,GAAG,EAAEF,SAAjD;AAA4D,MAAA,QAAQ,EAAEJ;AAAtE;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,MAAD;AAAQ,MAAA,QAAQ,EAAEoB,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CAhDD;;GAAMvB,M;UACeJ,W,EACIC,W;;;KAFnBG,M;AAmDN,eAAeA,MAAf","sourcesContent":["import React from \"react\";\nimport {storage} from \"./firebase\";\nimport {Button} from \"../elements\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {actionCreators as imageActions} from \"../redux/modules/image\"; // import 해와야함\n\n\n\nconst Upload = (props) => {\n    const dispatch = useDispatch();\n    const is_uploading = useSelector(state => state.image.uploading);\n\n    const fileInput = React.useRef();\n\n    const selectFile = (e) => {\n        console.log(e);\n        console.log(e.target);\n        console.log(e.target.files[0]);\n\n\n        console.log(fileInput.current.files[0]);\n\n        const reader = new FileReader();\n        const file = fileInput.current.files[0];\n\n        reader.readAsDataURL(file);\n        reader.onloadend =() => {\n            console.log(reader.result)\n            dispatch(imageActions.setPreview(reader.result));\n            \n            \n        }\n    }\n\n    const uploadFB =() => {\n        let image = fileInput.current.files[0];\n        const _upload = storage.ref(`images/${image.name}`).put(image);\n\n        _upload.then((snapshot) => {\n            console.log(snapshot);\n\n\n            snapshot.ref.getDownloadURL().then((url)=>{\n                console.log(url);\n            })\n        })\n    }\n\n    \n    return (\n        <React.Fragment>\n            <input type =\"file\" onChange = {selectFile} ref={fileInput} disabled={is_uploading}/> \n            <Button _onClick={uploadFB}>업로드하기</Button>\n\n        </React.Fragment>\n    )\n}\n\n\nexport default Upload;"]},"metadata":{},"sourceType":"module"}