{"ast":null,"code":"var _jsxFileName = \"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostWrite.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, Text, Button, Image, Input } from \"../elements\";\nimport Upload from \"../shared/Upload\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst PostWrite = props => {\n  _s();\n\n  const dispatch = useDispatch();\n  const is_login = useSelector(state => state.user.is_login);\n  const preview = useSelector(state => state.image.preview);\n  const post_list = useSelector(state => state.post.list);\n  console.log(props.match.params.id);\n  const post_id = props.match.params.id;\n  const is_edit = post_id ? true : false;\n  const {\n    history\n  } = props;\n\n  let _post = is_edit ? post_list.find(p => p.id === post_id) : null;\n\n  console.log(_post);\n  const [contents, setContents] = React.useState(_post ? _post.contents : \"\");\n  React.useEffect(() => {\n    if (is_edit && !_post) {\n      console.log('포스트 정보가 없어요!');\n      history.goBack();\n      return;\n    }\n\n    if (is_edit) dispatch(imageActions.setPreview(_post.image_url));\n  }, []);\n\n  const changeContents = e => {\n    setContents(e.target.value);\n  };\n\n  const addPost = () => {\n    dispatch(postActions.addPostFB(contents));\n  };\n\n  if (!is_login) {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      margin: \"100px 0px\",\n      padding: \"16px\",\n      center: true,\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        size: \"32px\",\n        bold: true,\n        children: \"\\uC557! \\uC7A0\\uAE50!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        size: \"16px\",\n        children: \"\\uB85C\\uADF8\\uC778 \\uD6C4\\uC5D0\\uB9CC \\uAE00\\uC744 \\uC4F8 \\uC218 \\uC788\\uC5B4\\uC694!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        _onClick: () => {\n          history.replace(\"/\");\n        },\n        children: \" \\uB85C\\uADF8\\uC778 \\uD558\\uB7EC\\uAC00\\uAE30 \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: [/*#__PURE__*/_jsxDEV(Text, {\n        size: \"36px\",\n        bold: true,\n        children: is_edit ? \"게시글 수정\" : \"게시글 작성\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Upload, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        padding: \"16px\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          margin: \"0px\",\n          size: \"24px\",\n          bold: true,\n          children: \"\\uBBF8\\uB9AC\\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        shape: \"rectangle\",\n        src: preview ? preview : \"http://via.placeholder.com/400x300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        padding: \"16px\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          value: contents,\n          _onChange: changeContents,\n          label: \"\\uAC8C\\uC2DC\\uAE00 \\uB0B4\\uC6A9\",\n          placeholder: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\",\n          multiLine: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      padding: \"16px\",\n      children: is_edit ? /*#__PURE__*/_jsxDEV(Button, {\n        text: \"\\uAC8C\\uC2DC\\uAE00 \\uC218\\uC815\",\n        _onClick: editPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(Button, {\n        text: \"\\uAC8C\\uC2DC\\uAE00 \\uC791\\uC131\",\n        _onClick: addPost\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n\n_s(PostWrite, \"CYGdTT/vkkqrDd9IRztLpD/xWDk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = PostWrite;\nexport default PostWrite;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostWrite\");","map":{"version":3,"sources":["/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostWrite.js"],"names":["React","Grid","Text","Button","Image","Input","Upload","useSelector","useDispatch","actionCreators","postActions","imageActions","PostWrite","props","dispatch","is_login","state","user","preview","image","post_list","post","list","console","log","match","params","id","post_id","is_edit","history","_post","find","p","contents","setContents","useState","useEffect","goBack","setPreview","image_url","changeContents","e","target","value","addPost","addPostFB","replace","editPost"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { Grid, Text, Button, Image, Input } from \"../elements\";\nimport Upload from \"../shared/Upload\";\nimport {useSelector, useDispatch} from \"react-redux\";\nimport {actionCreators as postActions} from \"../redux/modules/post\";\nimport {actionCreators as imageActions} from \"../redux/modules/image\";\n\n\n\nconst PostWrite = (props) => {\n\n  const dispatch = useDispatch();\n  const is_login = useSelector((state) => state.user.is_login);\n  const preview = useSelector((state) => state.image.preview);\n  const post_list = useSelector((state)=> state.post.list);\n\n  console.log(props.match.params.id)\n  const post_id = props.match.params.id;\n  const is_edit = post_id? true: false;\n\n  const {history} = props;\n\n\n  let _post = is_edit? post_list.find((p) => p.id === post_id) : null;\n\n  console.log(_post);\n\n  const [contents, setContents] = React.useState(_post? _post.contents : \"\");\n\n\n  React.useEffect(()=>{\n    if(is_edit && !_post){\n      console.log('포스트 정보가 없어요!')\n      history.goBack();\n\n      return;\n    }\n    if(is_edit)\n    dispatch(imageActions.setPreview(_post.image_url));\n  }, []);\n\n  const changeContents = (e) => {\n    setContents(e.target.value); \n\n  }\n\n  const addPost =() => {\n   dispatch(postActions.addPostFB(contents));\n  }\n\n  if (!is_login){\n    return(\n      <Grid margin =\"100px 0px\" padding=\"16px\" center >\n        <Text size= \"32px\" bold>앗! 잠깐!</Text>\n        <Text size= \"16px\">로그인 후에만 글을 쓸 수 있어요!</Text>\n        <Button _onClick ={()=> {history.replace(\"/\");}}> 로그인 하러가기 </Button>  \n      </Grid>\n    )\n  }\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        <Text size=\"36px\" bold>\n        {is_edit ? \"게시글 수정\" :\"게시글 작성\"}\n        </Text>\n        <Upload/>\n      </Grid>\n      <Grid>\n        <Grid padding=\"16px\">\n          <Text margin=\"0px\" size=\"24px\" bold>\n            미리보기\n          </Text>\n        </Grid>\n        <Image shape =\"rectangle\" \n        src ={preview? preview :\"http://via.placeholder.com/400x300\"}\n        />\n      </Grid>\n      <Grid>\n      <Grid padding=\"16px\">\n        <Input\n          value ={contents}\n          _onChange ={changeContents}\n          label=\"게시글 내용\"\n          placeholder=\"게시글 작성\"\n          multiLine\n        />\n      </Grid>\n\n      </Grid>\n      <Grid padding =\"16px\">\n        {is_edit ? (\n        <Button text=\"게시글 수정\" _onClick={editPost}></Button>\n        ):(\n        <Button text=\"게시글 작성\" _onClick={addPost}></Button>)}\n          \n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default PostWrite;\n"]},"metadata":{},"sourceType":"module"}