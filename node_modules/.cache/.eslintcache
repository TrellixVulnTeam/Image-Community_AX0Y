[{"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/index.js":"1","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/reportWebVitals.js":"2","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/App.js":"3","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostList.js":"4","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/components/Post.js":"5","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/elements/Grid.js":"6","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/elements/Image.js":"7","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/elements/Text.js":"8","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/elements/index.js":"9","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/Login.js":"10","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/elements/Input.js":"11","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/elements/Button.js":"12","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/components/Header.js":"13","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/Signup.js":"14","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/Cookie.js":"15","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/configureStore.js":"16","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/user.js":"17","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/firebase.js":"18","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/Permit.js":"19","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/common.js":"20","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostWrite.js":"21","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/Upload.js":"22","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostDetail.js":"23","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/components/CommentList.js":"24","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/components/CommentWrite.js":"25","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/post.js":"26","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/image.js":"27","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/Search.js":"28","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/Notification.js":"29","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/components/Card.js":"30","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/InfinityScroll.js":"31","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/elements/Spinner.js":"32","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/comment.js":"33"},{"size":591,"mtime":1616769740694,"results":"34","hashOfConfig":"35"},{"size":362,"mtime":1616729057518,"results":"36","hashOfConfig":"35"},{"size":1900,"mtime":1616993223223,"results":"37","hashOfConfig":"35"},{"size":1909,"mtime":1617012845656,"results":"38","hashOfConfig":"35"},{"size":1863,"mtime":1617155886525,"results":"39","hashOfConfig":"35"},{"size":1134,"mtime":1617012269432,"results":"40","hashOfConfig":"35"},{"size":1414,"mtime":1617157112854,"results":"41","hashOfConfig":"35"},{"size":644,"mtime":1616924738895,"results":"42","hashOfConfig":"35"},{"size":228,"mtime":1617008595778,"results":"43","hashOfConfig":"35"},{"size":1846,"mtime":1617159278209,"results":"44","hashOfConfig":"35"},{"size":1545,"mtime":1617030835718,"results":"45","hashOfConfig":"35"},{"size":1304,"mtime":1616992731691,"results":"46","hashOfConfig":"35"},{"size":2071,"mtime":1616991284963,"results":"47","hashOfConfig":"35"},{"size":2421,"mtime":1616828510815,"results":"48","hashOfConfig":"35"},{"size":647,"mtime":1616764608775,"results":"49","hashOfConfig":"35"},{"size":1369,"mtime":1617016100894,"results":"50","hashOfConfig":"35"},{"size":3497,"mtime":1616811780548,"results":"51","hashOfConfig":"35"},{"size":773,"mtime":1616940579178,"results":"52","hashOfConfig":"35"},{"size":481,"mtime":1616814961287,"results":"53","hashOfConfig":"35"},{"size":154,"mtime":1616827786911,"results":"54","hashOfConfig":"35"},{"size":3131,"mtime":1617142162187,"results":"55","hashOfConfig":"35"},{"size":1519,"mtime":1616948977206,"results":"56","hashOfConfig":"35"},{"size":1008,"mtime":1617031256136,"results":"57","hashOfConfig":"35"},{"size":1451,"mtime":1617027575393,"results":"58","hashOfConfig":"35"},{"size":1197,"mtime":1617157433109,"results":"59","hashOfConfig":"35"},{"size":9815,"mtime":1617154412255,"results":"60","hashOfConfig":"35"},{"size":1815,"mtime":1616948145944,"results":"61","hashOfConfig":"35"},{"size":635,"mtime":1616952502825,"results":"62","hashOfConfig":"35"},{"size":790,"mtime":1617012503095,"results":"63","hashOfConfig":"35"},{"size":629,"mtime":1616991187165,"results":"64","hashOfConfig":"35"},{"size":1380,"mtime":1617009102863,"results":"65","hashOfConfig":"35"},{"size":1081,"mtime":1617015654483,"results":"66","hashOfConfig":"35"},{"size":3001,"mtime":1617030168506,"results":"67","hashOfConfig":"35"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},"ivw3yo",{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"70"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"70"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"70"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"70"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"70"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"70"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"70"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"70"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"70"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"70"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"70"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"70"},"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/index.js",[],["149","150"],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/reportWebVitals.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/App.js",["151","152"],"import \"./App.css\";\nimport React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\n\nimport {ConnectedRouter} from \"connected-react-router\";\nimport {history} from \"../redux/configureStore\";\n\nimport PostList from \"../pages/PostList\";\nimport Login from \"../pages/Login\";\nimport Header from \"../components/Header\";\nimport { Grid, Button} from \"../elements\";\nimport Signup from \"../pages/Signup\";\nimport { useDispatch } from \"react-redux\";\nimport {actionCreators as userActions} from \"../redux/modules/user\";\nimport { apiKey } from \"../shared/firebase\";\nimport Permit from \"./Permit\";\nimport PostWrite from \"../pages/PostWrite\";\nimport PostDetail from \"../pages/PostDetail\";\nimport Search from \"./Search\";\nimport Notification from \"../pages/Notification\"\n\n\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n  const is_session = sessionStorage.getItem(_session_key)? true: false;\n\n  React.useEffect(() => {\n    \n    if(is_session){\n      dispatch(userActions.loginCheckFB());\n    }\n  \n  },[]);\n\n  return (\n    <React.Fragment>\n      <Grid>\n        <Header></Header>\n        <ConnectedRouter history = {history}>\n          <Route path=\"/\" exact component={PostList} />\n          <Route path=\"/login\" exact component={Login} />\n          <Route path=\"/signup\" exact component={Signup} />\n          <Route path=\"/write\" exact component={PostWrite} />\n          <Route path=\"/write/:id\" exact component={PostWrite} />\n          <Route path =\"/post/:id\" exact component ={PostDetail} />\n          <Route path =\"/search\" exact component ={Search} />\n          <Route path =\"/noti\" exact component ={Notification} />\n        </ConnectedRouter>\n      </Grid>\n      <Permit>\n        <Button is_float text=\"+\" _onClick = {()=>{history.push(\"/write\")}}></Button>\n      </Permit>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostList.js",["153","154"],"import React from \"react\";\nimport Post from \"../components/Post\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as postActions } from \"../redux/modules/post\";\nimport InfinityScroll from \"../shared/InfinityScroll\";\nimport {Grid} from \"../elements/index\"\n\n\n\nconst PostList = (props) => {\n  const dispatch = useDispatch();\n  const post_list = useSelector((state) => state.post.list);\n  const user_info = useSelector((state) => state.user.user);\n  const is_loading = useSelector((state) => state.post.is_loading);\n  const paging = useSelector((state) => state.post.paging);\n\n\n  const{history} = props;\n\n  React.useEffect(() => {\n    if (post_list.length === 0) {\n      dispatch(postActions.getPostFB());\n    }\n  }, []);\n\n  return (\n    <React.Fragment>\n        <Grid bg={\"#EFF6FF\"} padding =\"20px 0px 20px 0px\">\n      <InfinityScroll\n      callNext = { () =>{\n          dispatch(postActions.getPostFB(paging.next))      \n    }}\n\n    is_next ={paging.next? true: false}\n    loading={true}\n      >\n        \n\n        {post_list.map((p, idx) => {\n          if (p.user_info.user_id === user_info?.uid) {\n            return (\n                <Grid\n                bg=\"#ffffff\"\n                margin=\"8px 0px\"\n                key={p.id}\n                _onClick={() => {\n                  history.push(`/post/${p.id}`);\n                }}\n              >\n                <Post key={p.id} {...p} is_me />\n              </Grid>\n            );\n          } else {\n            return (\n                <Grid\n\t\t\t\t    key={p.id}\n                    bg=\"#ffffff\"\n                    _onClick={() => {\n                      history.push(`/post/${p.id}`);\n                    }}\n                  >\n                    <Post {...p} />\n                  </Grid>\n            );\n          }\n        })}\n      </InfinityScroll>\n      </Grid>\n\n    </React.Fragment>\n  );\n};\n\nexport default PostList;\n","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/components/Post.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/elements/Grid.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/elements/Image.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/elements/Text.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/elements/index.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/Login.js",["155","156"],"import React from \"react\";\nimport { Text, Input, Grid, Button } from \"../elements\";\nimport {getCookie, setCookie,deleteCookie} from \"../shared/Cookie\";\n\nimport {useDispatch} from \"react-redux\";\nimport {actionCreators as userActions} from \"../redux/modules/user\";\nimport { emailCheck } from \"../shared/common\";\n\n\nconst Login = (props) => {\n\n  console.log(getCookie('user_id'));\n    const dispatch = useDispatch();\n\n    const [id, setId] = React.useState(\"\");\n    const [pwd, setPwd] = React.useState(\"\");\n\n\n\n  const login = () => {\n\n\n    \n    if(id === \"\" || pwd ===\"\"){\n      window.alert(\"아이디 혹은 비밀번호가 공란입니다. 확인해 주세요! \")\n      return;\n\n    }\n\n\n    if(!emailCheck(id)){\n      window.alert(\"이메일 형식이 맞지 않습니다!\")\n      return;\n    }\n\n    dispatch(userActions.loginFB(id, pwd));\n\n}\n\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        <Text size=\"32px\" bold>\n          로그인\n        </Text>\n\n        <Grid padding=\"16px 0px\">\n        <Input\n            label=\"아이디\"\n            placeholder=\"아이디를 입력해주세요.\"\n            _onChange={(e) => {\n              setId(e.target.value);\n            }}\n          />\n        </Grid>\n        <Grid padding=\"16px 0px\">\n        <Input\n            label=\"비밀번호\"  \n            placeholder=\"비밀번호를 입력해주세요.\"\n            type=\"password\"\n            _onChange={(e) => {\n              setPwd(e.target.value);\n            }}\n            value ={pwd}\n            is_submit\n            onSubmit={login}\n          />\n        </Grid>\n\n        <Button\n          text=\"로그인하기\"\n          _onClick={() => {\n            console.log(\"로그인 했어!\");\n            login();\n            \n          }}\n        ></Button>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default Login;\n","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/elements/Input.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/elements/Button.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/components/Header.js",["157","158"],"import React from \"react\";\nimport { Grid, Text, Button } from \"../elements\";\nimport { getCookie, deleteCookie } from \"../shared/Cookie\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { actionCreators as userActions } from \"../redux/modules/user\";\nimport { history } from \"../redux/configureStore\";\nimport { apiKey } from \"../shared/firebase\";\nimport Permit from \"../shared/Permit\";\n\n\n\nconst Header = (props) => {\n  const dispatch = useDispatch();\n  const is_login = useSelector((state) => state.user.is_login);\n\n  const _session_key = `firebase:authUser:${apiKey}:[DEFAULT]`;\n\n\n  const is_session = sessionStorage.getItem(_session_key)? true: false;\n\n  console.log(is_session)\n  // <Permit>\n\n  // </Permit>\n\n  \n  if (is_login && is_session) {\n    return (\n      <React.Fragment>\n        <Grid is_flex padding=\"4px 16px\">\n          <Grid>\n            <Text margin=\"0px\" size=\"24px\" bold>\n              은스타\n            </Text>\n          </Grid>\n\n          <Grid is_flex>\n            <Button text=\"내정보\"></Button>\n            <Button _onClick={()=>{\n              history.push(\"/noti\");\n            }}\n            text=\"알림\"></Button>\n            <Button\n              text=\"로그아웃\"\n              _onClick={() => {\n                dispatch(userActions.logoutFB());\n              }}\n            ></Button>\n          </Grid>\n        </Grid>\n      </React.Fragment>\n    );\n  }\n  <Permit>\n\n\n    \n  </Permit>;\n  return (\n    <React.Fragment>\n      <Grid is_flex padding=\"4px 16px\">\n        <Grid>\n          <Text margin=\"0px\" size=\"24px\" bold>\n            은스타\n          </Text>\n        </Grid>\n\n        <Grid is_flex>\n          <Button\n            text=\"로그인\"\n            _onClick={() => {\n              history.push(\"/login\");\n            }}\n          ></Button>\n          <Button\n            text=\"회원가입\"\n            _onClick={() => {\n              history.push(\"/signup\");\n            }}\n          ></Button>\n        </Grid>\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nHeader.defaultProps = {};\n\nexport default Header;\n","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/Signup.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/Cookie.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/configureStore.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/user.js",["159","160","161","162","163"],"import { createAction, handleAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\n\nimport { setCookie, getCookie, deleteCookie } from \"../../shared/Cookie\";\nimport { auth } from \"../../shared/firebase\";\nimport firebase from \"firebase/app\";\n\n//액션타입 3가지\nconst LOG_OUT = \"LOG_OUT\";\nconst GET_USER = \"GET_USER\";\nconst SET_USER = \"SET_USER\";\n\n// action creators\nconst logOut = createAction(LOG_OUT, (user) => ({ user }));\nconst getUser = createAction(GET_USER, (user) => ({ user }));\nconst setUser = createAction(SET_USER, (user) => ({ user }));\n\n//initialState\nconst initialState = {\n  user: null,\n  is_login: false,\n};\n\nconst user_initial = {\n  user_name: \"pear111\",\n};\n\n//middleware actions\nconst loginFB = (id, pwd) => {\n  return function (dispatch, getState, { history }) {\n    auth.setPersistence(firebase.auth.Auth.Persistence.SESSION).then((res) => {\n      auth\n        .signInWithEmailAndPassword(id, pwd)\n        .then((user) => {\n          console.log(user);\n\n          dispatch(\n            setUser({\n              user_name: user.user.displayName,\n              id: id,\n              user_profile: \"\",\n              uid: user.user.uid,\n            })\n          );\n          history.push(\"/\");\n\n          // Signed in\n          // ...\n        })\n        .catch((error) => {\n          var errorCode = error.code;\n          var errorMessage = error.message;\n        });\n    });\n  };\n};\n\nconst signupFB = (id, pwd, user_name) => {\n  return function (dispatch, getState, { history }) {\n    auth\n      .createUserWithEmailAndPassword(id, pwd)\n      .then((user) => {\n        console.log(user);\n\n        auth.currentUser\n          .updateProfile({\n            displayName: user_name,\n          })\n          .then(() => {\n            dispatch(\n              setUser({ user_name: user_name, id: id, user_profile: \"\", uid: user.user.uid })\n            );\n            history.push(\"/\");\n          })\n          .catch((error) => {\n            console.log(error);\n          });\n        // Signed in\n        // ...\n      })\n      .catch((error) => {\n        var errorCode = error.code;\n        var errorMessage = error.message;\n\n        console.log(errorCode, errorMessage);\n        // ..\n      });\n  };\n};\n\nconst loginCheckFB =() => {\n  return function(dispatch, getState, {history}){\n    auth.onAuthStateChanged((user) => {\n      if(user) {\n        dispatch(\n          setUser({\n            user_name: user.displayName,\n            user_profile: \"\",\n            id: user.email,\n            uid: user.uid,\n          })\n        );\n      }else {\n        dispatch(logOut());\n      }\n    })\n}\n}\n\nconst logoutFB = () =>{\n  return function (dispatch, getState, {history}) {\n    auth.signOut().then(() => {\n      dispatch(logOut());\n      history.replace('/');\n    })\n  }\n}\n\n\n//reducer\n\nexport default handleActions(\n  {\n    [SET_USER]: (state, action) =>\n      produce(state, (draft) => {\n        setCookie(\"is_login\", \"success\");\n        draft.user = action.payload.user; //payload를 중간에 거쳐야 한다.\n        draft.is_login = true;\n      }),\n    [LOG_OUT]: (state, action) =>\n      produce(state, (draft) => {\n        deleteCookie(\"is_login\");\n        draft.user = null;\n        draft.is_login = false;\n      }),\n\n    [GET_USER]: (state, action) => produce(state, (draft) => {}),\n  },\n  initialState\n);\n\n// action creator export\nconst actionCreators = {\n  logOut,\n  getUser,\n  signupFB,\n  loginFB,\n  loginCheckFB,\n  logoutFB,\n};\n\nexport { actionCreators };\n","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/firebase.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/Permit.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/common.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostWrite.js",["164","165"],"import React from \"react\";\nimport { Grid, Text, Button, Image, Input } from \"../elements\";\nimport Upload from \"../shared/Upload\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport post, { actionCreators as postActions } from \"../redux/modules/post\";\nimport { actionCreators as imageActions } from \"../redux/modules/image\";\n\nconst PostWrite = (props) => {\n  const dispatch = useDispatch();\n  const is_login = useSelector((state) => state.user.is_login);\n  const preview = useSelector((state) => state.image.preview);\n  const post_list = useSelector((state) => state.post.list);\n\n  const post_id = props.match.params.id;\n  const is_edit = post_id ? true : false;\n\n  const { history } = props;\n\n  let _post = is_edit ? post_list.find((p) => p.id === post_id) : null;\n\n  const [contents, setContents] = React.useState(_post ? _post.contents : \"\");\n\n  React.useEffect(() => {\n    if (is_edit && !_post) {\n      console.log(\"포스트 정보가 없어요!\");\n      history.goBack();\n\n      return;\n    }\n    if (is_edit) {\n      dispatch(imageActions.setPreview(_post.image_url));\n    }\n  }, []);\n\n  const changeContents = (e) => {\n    setContents(e.target.value);\n  };\n\n  const addPost = () => {\n    dispatch(postActions.addPostFB(contents));\n  };\n\n  const editPost = () => {\n    dispatch(postActions.editPostFB(post_id, { contents: contents }));\n  };\n\n  const deletePost = () => {\n    dispatch(postActions.deletePostFB(post_id));\n  };\n\n  if (!is_login) {\n    return (\n      <Grid margin=\"100px 0px\" padding=\"16px\" center>\n        <Text size=\"32px\" bold>\n          앗! 잠깐!\n        </Text>\n        <Text size=\"16px\">로그인 후에만 글을 쓸 수 있어요!</Text>\n        <Button\n          _onClick={() => {\n            history.replace(\"/\");\n          }}\n        >\n          {\" \"}\n          로그인 하러가기{\" \"}\n        </Button>\n      </Grid>\n    );\n  }\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        <Text size=\"36px\" bold>\n          {is_edit ? \"게시글 수정\" : \"게시글 작성\"}\n        </Text>\n        <Upload />\n      </Grid>\n      <Grid>\n        <Grid padding=\"16px\">\n          <Text margin=\"0px\" size=\"24px\" bold>\n            미리보기\n          </Text>\n        </Grid>\n        <Image\n          shape=\"rectangle\"\n          src={preview ? preview : \"http://via.placeholder.com/400x300\"}\n        />\n      </Grid>\n      <Grid>\n        <Grid padding=\"16px\">\n          <Input\n            value={contents}\n            _onChange={changeContents}\n            label=\"게시글 내용\"\n            placeholder=\"게시글 작성\"\n            multiLine\n          />\n        </Grid>\n      </Grid>\n      <Grid padding=\"16px\">\n        {is_edit ? (\n          <Button text=\"게시글 수정\" _onClick={editPost}></Button>\n        ) : (\n          <Button text=\"게시글 작성\" _onClick={addPost}></Button>\n        )}\n\n        {is_edit ? (\n          <Button\n            margin=\"4px 0px\"\n            text=\"게시글 삭제\"\n            _onClick={deletePost}\n          ></Button>\n        ) : (\n          \"\"\n        )}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\nexport default PostWrite;\n","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/Upload.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/PostDetail.js",["166"],"import React from \"react\";\nimport Post from \"../components/Post\";\nimport CommentList from \"../components/CommentList\";\nimport CommentWrite from \"../components/CommentWrite\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport {actionCreators as postActions} from \"../redux/modules/post\";\n\nconst PostDetail = (props) => {\n  const dispatch = useDispatch();\n  const id = props.match.params.id;\n\n  const user_info = useSelector((state) => state.user.user);\n\n  const post_list = useSelector((store) => store.post.list);\n\n  const post_idx = post_list.findIndex((p) => p.id === id);\n  const post = post_list[post_idx];\n\n\n  React.useEffect(() => {\n    if (post) {\n      return;\n    }\n\n    dispatch(postActions.getOnePostFB(id));\n  }, []);\n\n  return (\n    <React.Fragment>\n      {post && (\n        <Post {...post} is_me={post.user_info.user_id === user_info?.uid} />\n      )}\n      <CommentWrite post_id={id} />\n      <CommentList post_id={id} />\n    </React.Fragment>\n  );\n};\n\nexport default PostDetail;","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/components/CommentList.js",["167","168","169"],"import React from \"react\";\nimport { Grid, Image, Text } from \"../elements\";\n\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {actionCreators as commentActions} from \"../redux/modules/comment\"\n\n\nconst CommentList = (props) => {\n  \n  const dispatch = useDispatch();\n  const comment_list = useSelector(state => state.comment.list);\n  const {post_id} = props;\n\n  React.useEffect(()=>{\n\n    if(!comment_list[post_id]){\n      dispatch(commentActions.getCommentFB(post_id));\n    }\n\n  },[]);\n\n  if(!comment_list[post_id] || !post_id){\n    return null;\n  }\n\n  return (\n    <React.Fragment>\n      <Grid padding=\"16px\">\n        {comment_list[post_id].map(c=>{\n          return   <CommentItem key={c.id} {...c} />\n        })}\n      </Grid>\n    </React.Fragment>\n  );\n};\n\n\nCommentList.defaultProps ={\n  post_id:null,\n}\n\nexport default CommentList;\n\nconst CommentItem = (props) => {\n  const { user_profile, user_name, user_id, insert_dt, contents } = props;\n  return (\n    <Grid is_flex>\n      <Grid is_flex width=\"auto\">\n        <Image shape=\"circle\" />\n        <Text bold>{user_name}</Text>\n      </Grid>\n      <Grid is_flex margin=\"0px 4px\">\n        <Text margin=\"0px\">{contents}</Text>\n        <Text margin=\"0px\">{insert_dt}</Text>\n      </Grid>\n    </Grid>\n  );\n};\n\nCommentItem.defaultProps = {\n  user_profile: \"\",\n  user_name: \"Joy283\",\n  user_id: \"\",\n  post_id: 1,\n  contents: \"그리운 그곳이네요!\",\n  insert_dt: \"2021-01-01 19:00:00\",\n};\n","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/components/CommentWrite.js",["170"],"import React from \"react\";\nimport {Grid, Input, Button} from \"../elements\"\n\nimport {actionCreators as commentActions} from \"../redux/modules/comment\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport Permit from \"../shared/Permit\"\n\nconst CommentWrite = (props) => {\n\n    const dispatch = useDispatch();\n\n    const [comment_text, setCommentText] = React.useState();\n\n    const {post_id} = props;\n\n    const onChange =(e) =>{\n        setCommentText(e.target.value);\n    }\n\n    const write =() => {\n        console.log(comment_text);\n        dispatch(commentActions.addCommentFB(post_id, comment_text ))\n        setCommentText(\"\")\n    }\n\n    return(\n        <React.Fragment>\n            <Permit>\n\n            <Grid padding=\"16px\" is_flex >\n            <Input \n            placeholder=\"댓글내용을 입력해 주세요 :)\" \n            _onChange={onChange} \n            value ={comment_text} \n            onSubmit ={write}\n            is_submit\n            />\n            <Button width=\"50px\" margin=\"0px 2px 0px 2px\"\n            _onClick={write}\n            >작성</Button>\n\n        </Grid>\n            </Permit>\n        \n        </React.Fragment>\n    )\n}\n\n\nexport default CommentWrite;","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/post.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/image.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/Search.js",["171","172"],"import React from \"react\";\nimport _ from \"lodash\";\n\nconst Search = () => {\n\n    const [text, setText] = React.useState(\"\");\n\n     const debounce = _.debounce((e) => {\n       console.log(\"debounce ::: \", e.target.value);\n     }, 1000);\n\n     const throttle = _.throttle((e) => {\n       console.log(\"throttle ::: \", e.target.value);\n     }, 1000);\n     \n    const keyPress = React.useCallback(debounce, []);\n\n    const onChange = (e) => {\n        setText(e.target.value);\n        keyPress(e);\n    }\n\n   \n\n    return (\n      <div>\n        <input type=\"text\" onChange={onChange} value={text}/>\n      </div>\n    );\n}\n\nexport default Search;","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/pages/Notification.js",["173","174"],"import React from \"react\";\nimport {Grid, Text, Image} from \"../elements\";\nimport Card from \"../components/Card\"\n\n\nconst Notification = (props) =>{\n    let noti =[\n        {user_name: \"aaa\", post_id: \"post1\", image_url: \"\" },\n        {user_name: \"aaa\", post_id: \"post2\", image_url: \"\" },\n        {user_name: \"aaa\", post_id: \"post3\", image_url: \"\" },\n        {user_name: \"aaa\", post_id: \"post4\", image_url: \"\" },\n        {user_name: \"aaa\", post_id: \"post5\", image_url: \"\" },\n    ];\n\n\n    return(\n        <React.Fragment>\n              <Grid padding=\"16px\" bg=\"#EFF6FF\">\n            {noti.map((n) => {\n                return (\n                    <Card key={n.post_id} {...n}/>\n                )\n            })}\n        </Grid>\n        </React.Fragment>\n    )\n}\n\n\n\nexport default Notification;","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/components/Card.js",["175"],"import React from \"react\"\nimport {Grid, Text, Image} from \"../elements\";\n\nconst Card =(props) =>{\n    const {image_url, user_name, post_id } = props;\n    return (\n        <Grid padding =\"16px\" is_flex bg=\"#ffffff\" margin=\"8px 0px\">\n        <Grid width=\"auto\" margin =\"0px 8px 0px 0px\"></Grid>\n        <Image size={85} shape=\"square\" image_url={image_url}/>\n        <Grid>\n            <Text>\n                <b>{user_name}</b>님이 게시글에 댓글을 남겼습니다. :)\n            </Text>\n        </Grid>\n    </Grid>)\n}\n\nCard.defaultProps={\n    image_url: \"\",\n    user_name: \"\",\n    post_id: null,\n}\n\n\n\nexport default Card;","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/shared/InfinityScroll.js",["176","177","178"],"import React from \"react\";\nimport _ from \"lodash\";\nimport Spinner from \"../elements/Spinner\"\n\n\nconst InfinityScroll = (props) => {\n\n    const {children, callNext, is_next, loading} = props;\n\n    const _handleScroll = _.throttle(() => {\n\n        if(loading){\n            return;\n        }\n\n        const {innerHeight} = window;\n        const {scrollHeight} = document.body;\n\n        const scrollTop =(document.documentElement && document.documentElement.scrollTop) || document.body.scrollTop;\n\n        if(scrollHeight - innerHeight - scrollTop <200) {\n            callNext();\n        }\n\n    }, 300);\n\n    const handleScroll = React.useCallback( _handleScroll, [loading]);\n\n    React.useEffect(() => {\n\n        if(loading){\n            return;\n        }\n\n       \n\n        if(is_next){\n            window.addEventListener(\"scroll\", handleScroll); //구독 \n        }else{\n            window.removeEventListener(\"scroll\", handleScroll);\n        }\n\n        return() => window.removeEventListener(\"scroll\", handleScroll); // Clean Up, 언마운트와 비슷하게 동작 \n    }, [is_next, loading]);\n    return (\n        <React.Fragment>\n            {props.children}\n            {is_next && (<Spinner/>)}\n        </React.Fragment>\n    )\n}\n\n\nInfinityScroll.defaultProps ={\n    children:null,\n    callNext:() => {},\n    is_next: false,\n    loading: false,\n}\nexport default InfinityScroll;","/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/elements/Spinner.js",[],"/Users/jeongeunchoi/REACT_MIDDLEAGE/image-community/src/redux/modules/comment.js",["179"],"import { createAction, handleActions } from \"redux-actions\";\nimport { produce } from \"immer\";\nimport { firestore } from \"../../shared/firebase\";\nimport \"moment\";\nimport moment from \"moment\";\nimport firebase from \"firebase/app\"\n\nimport {actionCreators as postActions } from \"./post\"\n\nconst SET_COMMENT = \"SET_COMMENT\";\nconst ADD_COMMENT = \"ADD_COMMENT\";\n\nconst LOADING = \"LOADING\";\n\nconst setComment = createAction(SET_COMMENT, (post_id, comment_list) => ({post_id, comment_list}));\nconst addComment = createAction(ADD_COMMENT, (post_id, comment) => ({post_id, comment}));\n\nconst loading = createAction(LOADING, (is_loading) => ({ is_loading }));\n\nconst initialState = {\n  list: {},\n  is_loading: false,\n};\n\nconst addCommentFB = (post_id, contents) => {\n  return function(dispatch, getState, {history}){\n\n\n    const post = getState().post.list.find(l => l.id ===post_id);\n    const commentDB = firestore.collection(\"comment\");\n    const user_info = getState().user.user;\n\n    let comment ={\n      post_id: post_id,\n      user_id: user_info.uid,\n      user_name: user_info.user_name,\n      user_profile: user_info.user_profile,\n      contents: contents,\n      insert_dt: moment().format(\"YYY-MM-DD hh:mm:ss\")\n    }\n    commentDB.add(comment).then((doc) => {\n      const postDB = firestore.collection(\"post\");\n      // increment 카운트수를 하나만큼 증가시켜 준다. \n      const increment = firebase.firestore.FieldValue.increment(1);\n\n\n      comment ={...comment, id: doc.id}\n      postDB\n      .doc(post_id)\n      .update({comment_cnt: increment})\n      .then((_post) =>{\n        dispatch(addComment(post_id, comment));\n\n        if(post){\n          dispatch(postActions.editPost(post_id, {commen_cnt: parseInt(post.comment_cnt)+1}));  //parseInt 숫자형으로 형 변환\n        }\n\n        \n      }) \n    })\n  }\n}\n\nconst getCommentFB = (post_id) => {\n    return function(dispatch, getState, {history}){\n    if(!post_id){\n      return\n    }\n    const commentDB = firestore.collection(\"comment\");\n    commentDB\n    .where(\"post_id\", \"==\", post_id)\n    .orderBy(\"insert_dt\", \"desc\")\n    .get()\n    .then((docs) => {\n      let list =[];\n\n      docs.forEach((doc) =>{\n        list.push({...doc.data(), id: doc.id})\n      })\n      dispatch(setComment(post_id, list));\n    }).catch(err =>{\n      console.log('댓글 정보를 가져올 수가 없네요!', err);\n    });\n\n    }\n}\n\n\nexport default handleActions(\n  {\n      [SET_COMMENT]: (state, action) => produce(state, (draft) => {\n        draft.list[action.payload.post_id] = action.payload.comment_list;\n      }),\n      [ADD_COMMENT]: (state, action) => produce(state, (draft)=> {\n        draft.list[action.payload.post_id].unshift(action.payload.comment);\n\n      }),\n      [LOADING]: (state, action) => \n      produce(state, (draft) => {\n        draft.is_loading = action.payload.is_loading;\n      })\n  },\n  initialState\n);\n\nconst actionCreators = {\n  getCommentFB,\n  setComment,\n  addComment,\n  addCommentFB,\n};\n\nexport { actionCreators };",{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","replacedBy":"183"},{"ruleId":"184","severity":1,"message":"185","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":23},{"ruleId":"188","severity":1,"message":"189","line":36,"column":5,"nodeType":"190","endLine":36,"endColumn":7,"suggestions":"191"},{"ruleId":"184","severity":1,"message":"192","line":14,"column":9,"nodeType":"186","messageId":"187","endLine":14,"endColumn":19},{"ruleId":"188","severity":1,"message":"193","line":24,"column":6,"nodeType":"190","endLine":24,"endColumn":8,"suggestions":"194"},{"ruleId":"184","severity":1,"message":"195","line":3,"column":20,"nodeType":"186","messageId":"187","endLine":3,"endColumn":29},{"ruleId":"184","severity":1,"message":"196","line":3,"column":30,"nodeType":"186","messageId":"187","endLine":3,"endColumn":42},{"ruleId":"184","severity":1,"message":"197","line":3,"column":10,"nodeType":"186","messageId":"187","endLine":3,"endColumn":19},{"ruleId":"184","severity":1,"message":"196","line":3,"column":21,"nodeType":"186","messageId":"187","endLine":3,"endColumn":33},{"ruleId":"184","severity":1,"message":"198","line":1,"column":24,"nodeType":"186","messageId":"187","endLine":1,"endColumn":36},{"ruleId":"184","severity":1,"message":"197","line":4,"column":21,"nodeType":"186","messageId":"187","endLine":4,"endColumn":30},{"ruleId":"184","severity":1,"message":"199","line":24,"column":7,"nodeType":"186","messageId":"187","endLine":24,"endColumn":19},{"ruleId":"184","severity":1,"message":"200","line":51,"column":15,"nodeType":"186","messageId":"187","endLine":51,"endColumn":24},{"ruleId":"184","severity":1,"message":"201","line":52,"column":15,"nodeType":"186","messageId":"187","endLine":52,"endColumn":27},{"ruleId":"184","severity":1,"message":"202","line":5,"column":8,"nodeType":"186","messageId":"187","endLine":5,"endColumn":12},{"ruleId":"188","severity":1,"message":"203","line":33,"column":6,"nodeType":"190","endLine":33,"endColumn":8,"suggestions":"204"},{"ruleId":"188","severity":1,"message":"205","line":28,"column":6,"nodeType":"190","endLine":28,"endColumn":8,"suggestions":"206"},{"ruleId":"188","severity":1,"message":"207","line":20,"column":5,"nodeType":"190","endLine":20,"endColumn":7,"suggestions":"208"},{"ruleId":"184","severity":1,"message":"209","line":45,"column":11,"nodeType":"186","messageId":"187","endLine":45,"endColumn":23},{"ruleId":"184","severity":1,"message":"210","line":45,"column":36,"nodeType":"186","messageId":"187","endLine":45,"endColumn":43},{"ruleId":"184","severity":1,"message":"211","line":5,"column":22,"nodeType":"186","messageId":"187","endLine":5,"endColumn":33},{"ruleId":"184","severity":1,"message":"212","line":12,"column":12,"nodeType":"186","messageId":"187","endLine":12,"endColumn":20},{"ruleId":"188","severity":1,"message":"213","line":16,"column":22,"nodeType":"214","endLine":16,"endColumn":39,"suggestions":"215"},{"ruleId":"184","severity":1,"message":"216","line":2,"column":15,"nodeType":"186","messageId":"187","endLine":2,"endColumn":19},{"ruleId":"184","severity":1,"message":"217","line":2,"column":21,"nodeType":"186","messageId":"187","endLine":2,"endColumn":26},{"ruleId":"184","severity":1,"message":"218","line":5,"column":34,"nodeType":"186","messageId":"187","endLine":5,"endColumn":41},{"ruleId":"184","severity":1,"message":"219","line":8,"column":12,"nodeType":"186","messageId":"187","endLine":8,"endColumn":20},{"ruleId":"188","severity":1,"message":"220","line":27,"column":26,"nodeType":"214","endLine":27,"endColumn":43,"suggestions":"221"},{"ruleId":"188","severity":1,"message":"222","line":44,"column":8,"nodeType":"190","endLine":44,"endColumn":26,"suggestions":"223"},{"ruleId":"184","severity":1,"message":"224","line":18,"column":7,"nodeType":"186","messageId":"187","endLine":18,"endColumn":14},"no-native-reassign",["225"],"no-negated-in-lhs",["226"],"no-unused-vars","'BrowserRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook React.useEffect has missing dependencies: 'dispatch' and 'is_session'. Either include them or remove the dependency array.","ArrayExpression",["227"],"'is_loading' is assigned a value but never used.","React Hook React.useEffect has missing dependencies: 'dispatch' and 'post_list.length'. Either include them or remove the dependency array.",["228"],"'setCookie' is defined but never used.","'deleteCookie' is defined but never used.","'getCookie' is defined but never used.","'handleAction' is defined but never used.","'user_initial' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'post' is defined but never used.","React Hook React.useEffect has missing dependencies: '_post', 'dispatch', 'history', and 'is_edit'. Either include them or remove the dependency array.",["229"],"React Hook React.useEffect has missing dependencies: 'dispatch', 'id', and 'post'. Either include them or remove the dependency array.",["230"],"React Hook React.useEffect has missing dependencies: 'comment_list', 'dispatch', and 'post_id'. Either include them or remove the dependency array.",["231"],"'user_profile' is assigned a value but never used.","'user_id' is assigned a value but never used.","'useSelector' is defined but never used.","'throttle' is assigned a value but never used.","React Hook useCallback has a missing dependency: 'debounce'. Either include it or remove the dependency array.","MemberExpression",["232"],"'Text' is defined but never used.","'Image' is defined but never used.","'post_id' is assigned a value but never used.","'children' is assigned a value but never used.","React Hook useCallback has a missing dependency: '_handleScroll'. Either include it or remove the dependency array.",["233"],"React Hook React.useEffect has a missing dependency: 'handleScroll'. Either include it or remove the dependency array.",["234"],"'loading' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"235","fix":"236"},{"desc":"237","fix":"238"},{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},"Update the dependencies array to be: [dispatch, is_session]",{"range":"251","text":"252"},"Update the dependencies array to be: [dispatch, post_list.length]",{"range":"253","text":"254"},"Update the dependencies array to be: [_post, dispatch, history, is_edit]",{"range":"255","text":"256"},"Update the dependencies array to be: [dispatch, id, post]",{"range":"257","text":"258"},"Update the dependencies array to be: [comment_list, dispatch, post_id]",{"range":"259","text":"260"},"Update the dependencies array to be: [debounce]",{"range":"261","text":"262"},"Update the dependencies array to be: [_handleScroll]",{"range":"263","text":"264"},"Update the dependencies array to be: [handleScroll, is_next, loading]",{"range":"265","text":"266"},[1071,1073],"[dispatch, is_session]",[745,747],"[dispatch, post_list.length]",[1081,1083],"[_post, dispatch, history, is_edit]",[739,741],"[dispatch, id, post]",[491,493],"[comment_list, dispatch, post_id]",[401,403],"[debounce]",[659,668],"[_handleScroll]",[1047,1065],"[handleScroll, is_next, loading]"]